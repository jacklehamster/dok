{"version":3,"sources":["../loop.js"],"names":["define","Utils","coreLoops","frame","fps","period","Math","floor","nextTime","lastCount","frameCount","loop","time","requestAnimationFrame","Loop","i","length","addLoop","callback","beginLoop","push","removeLoop","index","indexOf","splice","loopTime","performance","now","destroyEverything","onDestroy","Object","defineProperty","enumerable","configurable","get","set","value"],"mappings":";;AAAAA,OAAO,CAAE,OAAF,CAAP,EAAoB,UAASC,KAAT,EAAgB;AAChC;;AAEA,QAAIC,YAAY,IAAhB;AACA,QAAIC,QAAQ,CAAZ;AACA,QAAIC,MAAM,CAAV;AACA,QAAIC,SAASC,KAAKC,KAAL,CAAW,OAAK,EAAhB,CAAb;AACA,QAAIC,WAAW,CAAf;AACA,QAAIC,YAAY,CAAhB;;AAEA,QAAIC,aAAa,CAAjB;;AAEA;;;AAGA,aAASC,IAAT,CAAcC,IAAd,EAAoB;AAChB,YAAGV,SAAH,EAAc;AACVW,kCAAuBF,IAAvB;AACA,gBAAGC,QAAME,KAAKF,IAAL,GAAYP,MAArB,EAA6B;AACzB;AACH;AACDS,iBAAKF,IAAL,GAAYN,KAAKC,KAAL,CAAWK,OAAKP,MAAhB,IAAwBA,MAApC;AACA,iBAAI,IAAIU,IAAE,CAAV,EAAYb,aAAaa,IAAEb,UAAUc,MAArC,EAA4CD,GAA5C,EAAkD;AAC9Cb,0BAAUa,CAAV;AACH;AACDL;AACA,gBAAGE,OAAKH,SAAL,GAAe,IAAlB,EAAwB;AACpBL,sBAAMM,UAAN;AACAA,6BAAa,CAAb;AACAD,4BAAYG,IAAZ;AACH;AACJ;AACJ;;AAED,aAASK,OAAT,CAAiBC,QAAjB,EAA2B;AACvB,YAAGhB,cAAY,IAAf,EAAqB;AACjBA,wBAAY,EAAZ;AACAiB;AACH;AACDjB,kBAAUkB,IAAV,CAAeF,QAAf;AACH;;AAED,aAASG,UAAT,CAAoBH,QAApB,EAA8B;AAC1B,YAAGhB,SAAH,EAAc;AACV,gBAAIoB,QAAQpB,UAAUqB,OAAV,CAAkBL,QAAlB,CAAZ;AACAhB,sBAAUsB,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACA,gBAAGpB,UAAUc,MAAV,KAAmB,CAAtB,EAAyB;AACrBd,4BAAY,IAAZ;AACH;AACJ;AACJ;;AAED,aAASiB,SAAT,GAAqB;AACjBR,aAAK,CAAL;AACH;;AAED,aAASc,QAAT,GAAoB;AAChB,eAAOC,YAAYC,GAAZ,KAAoBb,KAAKF,IAAhC;AACH;;AAED,aAASgB,iBAAT,GAA6B;AACzB1B,oBAAY,IAAZ;AACAC,gBAAQ,CAAR;AACAC,cAAM,CAAN;AACAC,iBAASC,KAAKC,KAAL,CAAW,OAAK,EAAhB,CAAT;AACAC,mBAAW,CAAX;AACAC,oBAAY,CAAZ;AACAC,qBAAa,CAAb;AACH;;AAED;;;AAGA,aAASI,IAAT,GAAgB,CACf;;AAEDA,SAAKG,OAAL,GAAeA,OAAf;AACAH,SAAKO,UAAL,GAAkBA,UAAlB;AACApB,UAAM4B,SAAN,CAAgBf,IAAhB;;AAEAgB,WAAOC,cAAP,CAAsBjB,IAAtB,EAA4B,KAA5B,EAAmC;AAC/BkB,oBAAY,KADmB;AAE/BC,sBAAc,KAFiB;AAG/BC,aAAK,eAAY;AACb,mBAAO9B,GAAP;AACH,SAL8B;AAM/B+B,aAAK,aAASC,KAAT,EAAgB;AACjB/B,qBAASC,KAAKC,KAAL,CAAW,OAAK6B,KAAhB,CAAT;AACH;AAR8B,KAAnC;;AAWA;;;AAGAtB,SAAKF,IAAL,GAAY,CAAZ;;AAEA,WAAOE,IAAP;AACF,CAjGF","file":"loop.js","sourcesContent":["define([ 'utils' ], function(Utils) {\n    'use strict';\n\n    var coreLoops = null;\n    var frame = 0;\n    var fps = 0;\n    var period = Math.floor(1000/60);\n    var nextTime = 0;\n    var lastCount = 0;\n\n    var frameCount = 0;\n   \n    /**\n    *  FUNCTION DEFINITIONS\n    */\n    function loop(time) {\n        if(coreLoops) {\n            requestAnimationFrame( loop );\n            if(time<=Loop.time + period) {\n                return;\n            }\n            Loop.time = Math.floor(time/period)*period;\n            for(var i=0;coreLoops && i<coreLoops.length;i++)  {\n                coreLoops[i]();\n            }\n            frameCount ++;\n            if(time-lastCount>1000) {\n                fps = frameCount;\n                frameCount = 0;\n                lastCount = time;\n            }\n        }\n    }\n\n    function addLoop(callback) {\n        if(coreLoops===null) {\n            coreLoops = [];\n            beginLoop();\n        }\n        coreLoops.push(callback);\n    }\n\n    function removeLoop(callback) {\n        if(coreLoops) {\n            var index = coreLoops.indexOf(callback);\n            coreLoops.splice(index, 1);\n            if(coreLoops.length===0) {\n                coreLoops = null;\n            }\n        }\n    }\n\n    function beginLoop() {\n        loop(0);\n    }\n\n    function loopTime() {\n        return performance.now() - Loop.time;\n    }\n\n    function destroyEverything() {\n        coreLoops = null;\n        frame = 0;\n        fps = 0;\n        period = Math.floor(1000/60);\n        nextTime = 0;\n        lastCount = 0;\n        frameCount = 0;\n    }\n\n    /**\n    *  PUBLIC DECLARATIONS\n    */\n    function Loop() {\n    }\n\n    Loop.addLoop = addLoop;\n    Loop.removeLoop = removeLoop;\n    Utils.onDestroy(Loop);\n\n    Object.defineProperty(Loop, \"fps\", {\n        enumerable: false,\n        configurable: false,\n        get: function () {\n            return fps;\n        },\n        set: function(value) {\n            period = Math.floor(1000/value);\n        }\n    });\n\n    /**\n    *   PROCESSES\n    */\n    Loop.time = 0;\n\n    return Loop;\n });\n"]}