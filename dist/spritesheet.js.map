{"version":3,"sources":["../spritesheet.js"],"names":["define","THREE","Utils","GifHandler","Loader","Packer","canvases","cuts","cutArray","cutCount","textures","slots","SPRITE_SHEET_SIZE","planeGeometry","PlaneBufferGeometry","getCanvas","url","canCreate","canvas","document","createElement","setAttribute","indexOf","width","height","index","parseInt","split","pop","tex","Texture","magFilter","NearestFilter","minFilter","LinearMipMapLinearFilter","addEventListener","updateTextureEvent","toString","style","position","left","top","initCanvas","context","getContext","webkitImageSmoothingEnabled","imageSmoothingEnabled","msImageSmoothingEnabled","customEvent","type","detail","evt","createEvent","initCustomEvent","fetchCanvas","urlpipe","frame","join","length","subpipe","slice","processString","subCanvas","getAttribute","processCanvas","event","currentTarget","dispatchEvent","size","isNaN","isGif","gif","getGif","frameInfos","ready","drawGif","callbacks","bind","image","loadImage","naturalWidth","naturalHeight","drawImage","outputCanvas","outputCtx","splits","every","num","map","o","drawWidth","Math","min","drawHeight","scale","ceil","abs","sign","translate","restore","borderWidth","round","parseFloat","beginPath","i","rect","stroke","fillStyle","font","fillText","ctx","data","getImageData","putImageData","moveTo","lineTo","getCut","time","cut","getFrame","getCutByURL","slot","getSlot","baseUrl","animated","uv","updateSpritesheetEvent","uvX","x","uvY","y","uvW","uvH","uvOrder","attributes","array","cutcut","Float32Array","u","preLoad","images","root","undefined","SpriteSheet","spritesheet","prop","hasOwnProperty","needsUpdate","destroyEverything","forEach","dispose","getTextures","onDestroy"],"mappings":"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","file":"spritesheet.js","sourcesContent":["define([ 'threejs', 'utils', 'gifhandler' , 'loader', 'packer'],\nfunction( THREE,     Utils,   GifHandler,    Loader,   Packer) {\n    'use strict';\n\n    var canvases = {};\n    var cuts = {};\n    var cutArray = [];\n    var cutCount = 0;\n\n    var textures = [null];\n    var slots = {};\n    var SPRITE_SHEET_SIZE = 2048;\n    var planeGeometry = new THREE.PlaneBufferGeometry(1, 1);\n\n    /**\n     *  FUNCTION DEFINITIONS\n     */\n    function getCanvas(url, canCreate) {\n        if(!canvases[url] && canCreate) {\n            var canvas = canvases[url] = document.createElement('canvas');\n            canvas.setAttribute(\"url\", url);\n            if(url.indexOf(\"tex-\")===0) {\n                canvas.width = canvas.height = SPRITE_SHEET_SIZE;\n                var index = parseInt(url.split(\"-\").pop());\n                var tex = new THREE.Texture(canvas);\n                tex.magFilter = THREE.NearestFilter;\n                tex.minFilter = THREE.LinearMipMapLinearFilter;\n                canvas.addEventListener(\"update\", updateTextureEvent);\n                textures[index] = tex;\n                canvas.setAttribute(\"texture\", index.toString());\n                canvas.style.position = \"absolute\";\n                canvas.style.left = 0;\n                canvas.style.top = 0;\n\n//                document.body.appendChild(canvas);\n            } else {\n                canvas.width = canvas.height = 1;\n            }\n            initCanvas(canvas);\n        }\n        return canvases[url];\n    }\n\n    function initCanvas(canvas) {\n        var context = canvas.getContext(\"2d\");\n        context.webkitImageSmoothingEnabled = false;\n        context.imageSmoothingEnabled = false;\n        context.msImageSmoothingEnabled = false;\n    }\n\n    function customEvent(type, detail) {\n        var evt = document.createEvent(\"CustomEvent\");\n        evt.initCustomEvent(type, false, false,detail||{});\n        return evt;\n    }\n\n    function fetchCanvas(urlpipe, frame) {\n        var canvas = getCanvas(frame+\":\"+urlpipe.join(\"|\"));\n        if (canvas) {\n            return canvas;\n        }\n\n        if(urlpipe.length > 1) {\n            canvas = getCanvas(frame+\":\"+urlpipe.join(\"|\"), true);\n            var subpipe = urlpipe.slice(0,urlpipe.length-1);\n            var processString = urlpipe[urlpipe.length-1];\n            var subCanvas = fetchCanvas(subpipe, frame);\n            canvas.setAttribute(\"base-url\",subCanvas.getAttribute(\"base-url\"));\n            processCanvas(subCanvas, processString,canvas);\n            subCanvas.addEventListener(\"update\", function(event) {\n                var subCanvas = event.currentTarget;\n                processCanvas(subCanvas, processString, canvas);\n                canvas.dispatchEvent(customEvent(\"update\"));\n            });\n            return canvas;\n        } else {\n            var url = urlpipe[0];\n            canvas = getCanvas(frame+\":\"+url, true);\n\n            //  check for width x height\n            var size = url.split(\"x\");\n            if(size.length===2 && !isNaN(parseInt(size[0])) && !isNaN(parseInt(size[1]))) {\n                canvas.width = parseInt(size[0]);\n                canvas.height = parseInt(size[1]);\n            } else if(GifHandler.isGif(url)) {\n                var gif = GifHandler.getGif(url);\n                canvas.setAttribute(\"animated\", true);\n                canvas.setAttribute(\"base-url\",url);\n                if(gif.frameInfos[frame] && gif.frameInfos[frame].ready) {\n                    drawGif(gif, frame, canvas);\n                } else {\n                    gif.callbacks[frame] = drawGif.bind(null, gif, frame, canvas);\n                }\n            } else {\n                canvas.setAttribute(\"base-url\",url);\n                var image = Loader.loadImage(url, function() {\n                    canvas.width = image.naturalWidth;\n                    canvas.height = image.naturalHeight;\n                    initCanvas(canvas);\n                    canvas.getContext(\"2d\").drawImage(image,0,0);\n//                    document.body.appendChild(canvas);\n                    canvas.dispatchEvent(customEvent(\"update\"));\n                });\n            }\n            return canvas;\n        }\n    }\n\n    function drawGif(gif, frame, canvas) {\n        canvas.width = gif.width;\n        canvas.height = gif.height;\n        initCanvas(canvas);\n        canvas.getContext(\"2d\").drawImage(gif.canvases[frame],0,0);\n        canvas.dispatchEvent(customEvent(\"update\"));\n    }\n\n    function processCanvas(canvas, processString, outputCanvas) {\n        //  check size split\n        var outputCtx = outputCanvas.getContext(\"2d\");\n        var splits = processString.split(\",\");\n        if(splits.length===4 && splits.every(function(num) { return !isNaN(num); })) {\n            splits = splits.map(function(o) { return parseInt(o); });\n            var drawWidth = Math.min(canvas.width-splits[0], splits[2]);\n            var drawHeight = Math.min(canvas.height-splits[1], splits[3]);\n            if(drawWidth>0 && drawHeight>0) {\n                outputCanvas.width = drawWidth;\n                outputCanvas.height = drawHeight;\n                initCanvas(outputCanvas);\n                outputCtx.drawImage(canvas,\n                    splits[0], splits[1], drawWidth, drawHeight,\n                    0,0,drawWidth,drawHeight\n                );\n            }\n        } else if(processString.indexOf(\"scale:\")===0) {\n            if (canvas.width > 1 && canvas.height > 1) {\n                var scale = processString.split(\":\")[1].split(\",\");\n                outputCanvas.width = Math.ceil(canvas.width * Math.abs(scale[0]));\n                outputCanvas.height = Math.ceil(canvas.height * Math.abs(scale[1 % scale.length]));\n                initCanvas(outputCanvas);\n                if (scale[0] < 0 || scale[1 % scale.length] < 0) {\n                    var sign = [\n                        scale[0] < 0 ? -1 : 1,\n                        scale[1 % scale.length] < 0 ? -1 : 1,\n                    ];\n                    outputCtx.translate(\n                        sign[0] < 0 ? outputCanvas.width : 0,\n                        sign[1] < 0 ? outputCanvas.height : 0);\n                    outputCtx.scale(sign[0], sign[1]);\n                }\n                outputCtx.drawImage(canvas,\n                    0, 0, canvas.width, canvas.height,\n                    0, 0, outputCanvas.width, outputCanvas.height\n                );\n                outputCtx.restore();\n            }\n        } else if(processString.indexOf(\"border\")===0) {\n            outputCanvas.width = canvas.width;\n            outputCanvas.height = canvas.height;\n            initCanvas(outputCanvas);\n            var borderWidth = processString.split(\":\")[1] || 1;\n            if(borderWidth.indexOf(\"%\")>0) {\n                borderWidth = Math.round(parseFloat(borderWidth.split(\"%\")[0]) / 100 * Math.min(outputCanvas.width, outputCanvas.height));\n            }\n            outputCtx.drawImage(canvas,0,0);\n            outputCtx.beginPath();\n            for(var i=0;i<borderWidth;i++) {\n                outputCtx.rect(i,i,canvas.width-1-i*2,canvas.height-1-i*2);\n            }\n            outputCtx.stroke();\n        } else if(processString.indexOf(\"text:\")===0) {\n            outputCanvas.width = canvas.width;\n            outputCanvas.height = canvas.height;\n            initCanvas(outputCanvas);\n            outputCtx.fillStyle = \"#000000\";\n            outputCtx.font = '18px Comic';\n            outputCtx.fillText(processString.split(\"text:\")[1],0,canvas.height);\n        } else if(processString.indexOf(\"shadow\")===0) {\n            outputCanvas.width = canvas.width;\n            outputCanvas.height = canvas.height;\n            initCanvas(outputCanvas);\n            var ctx = canvas.getContext(\"2d\");\n            var data = ctx.getImageData(0,0,canvas.width,canvas.height);\n            for(var i=0; i<data.data.length; i+=4) {\n                if(data.data[i+3]!==0) {\n                    data.data[i] = 0;\n                    data.data[i+1] = 0;\n                    data.data[i+2] = 0;\n                    data.data[i+3] = 127;\n                }\n            }\n            outputCtx.putImageData(data,0,0);\n        } else if(processString.indexOf(\"cross\")===0) {\n            outputCanvas.width = canvas.width;\n            outputCanvas.height = canvas.height;\n            initCanvas(outputCanvas);\n            outputCtx.drawImage(canvas,0,0);\n            outputCtx.beginPath();\n            outputCtx.moveTo(canvas.width/2, 0);\n            outputCtx.lineTo(canvas.width/2, canvas.height);\n            outputCtx.moveTo(0, canvas.height/2);\n            outputCtx.lineTo(canvas.width, canvas.height/2);\n            outputCtx.stroke();\n        }\n    }\n\n    function getCut(index, time) {\n        var cut = cutArray[index];\n        var frame = cut && cut.gif ? cut.gif.getFrame(time) : 0;\n        if(cut && cut.cut[frame] && cut.cut[frame].ready) {\n            return cut.cut[frame];\n        }\n        if(cut && cut.url) {\n            cut = getCutByURL(cut.url, frame);\n            return cut.cut[frame];\n        }\n        return null;\n    }\n\n    function getCutByURL(url, frame) {\n        if(cuts[url] && cuts[url].cut[frame] && cuts[url].cut[frame].ready) {\n            return cuts[url];\n        }\n\n        var canvas = fetchCanvas(url.split(\"|\"), frame);\n        var slot = Packer.getSlot(canvas);\n\n        var cut = cuts[url];\n        if(!cut) {\n            cut = {\n                index: cutCount++,\n                url: url,\n                baseUrl: null,\n                cut: [],\n                animated: false,\n            };\n            cuts[url] = cut;\n            cutArray[cut.index] = cut;\n        }\n        if(!cut.cut[frame]) {\n            cut.cut[frame] = {\n                tex: 0, uv: null, ready: false,\n                url: url, baseUrl: null,\n            };\n        }\n\n        if(slot) {\n            slots[canvas.getAttribute(\"url\")] = slot;\n            canvas.addEventListener(\"update\", updateSpritesheetEvent);\n            canvas.dispatchEvent(customEvent(\"update\"));\n\n            var uvX = slot.x / SPRITE_SHEET_SIZE;\n            var uvY = slot.y / SPRITE_SHEET_SIZE;\n            var uvW = canvas.width / SPRITE_SHEET_SIZE;\n            var uvH = canvas.height / SPRITE_SHEET_SIZE;\n            var uvOrder = planeGeometry.attributes.uv.array;\n\n            var cutcut = [ uvX, 1-uvY-uvH, uvX+uvW, 1-uvY ];\n\n            cut.gif = canvas.getAttribute(\"animated\")===\"true\" ? GifHandler.getGif(cut.url) : null;\n            cut.cut[frame].baseUrl = cut.baseUrl = canvas.getAttribute(\"base-url\");\n            cut.cut[frame].tex = slot.tex;\n            cut.cut[frame].uv = new Float32Array(uvOrder.length);\n            for(var u=0; u<uvOrder.length; u++) {\n                cut.cut[frame].uv[u] = cutcut[uvOrder[u]*2 + u%2];\n            }\n            cut.cut[frame].ready = true;\n            return cut;\n        } else {\n            return cut;\n        }\n    }\n\n    function preLoad(images,root) {\n        if(root===undefined) {\n            root = SpriteSheet.spritesheet;\n        }\n        if(typeof(images)===\"string\") {\n            var cut = getCutByURL(images, 0);\n            if(cut) {\n                return cut.index;\n            }\n        } else {\n            for(var prop in images) {\n                if(images.hasOwnProperty(prop)) {\n                    if(!root[prop]) {\n                        root[prop] = [];\n                    }\n                    var index = SpriteSheet.preLoad(images[prop],root[prop]);\n                    if (index!==null) {\n                        root[prop] = index;\n                    }\n                }\n            }\n            return root;\n        }\n    }\n\n    function updateSpritesheetEvent(event) {\n        var canvas = event.currentTarget;\n        var url = canvas.getAttribute(\"url\");\n        var slot = slots[url];\n        var spritesheet = getCanvas(\"tex-\"+slot.tex, true);\n        spritesheet.getContext(\"2d\").drawImage(canvas,slot.x,slot.y);\n        spritesheet.dispatchEvent(customEvent(\"update\"));\n    }\n\n    function updateTextureEvent(event) {\n        var canvas = event.currentTarget;\n        textures[parseInt(canvas.getAttribute(\"texture\"))].needsUpdate = true;\n    }\n\n    function destroyEverything() {\n        textures.forEach(function(tex) { if(tex)tex.dispose() });\n        canvases = {};\n        cuts = {};\n        slots = {};\n        textures = [null];\n    }\n\n    function getTextures() {\n        return textures;\n    }\n\n    /**\n     *  PUBLIC DECLARATIONS\n     */\n    function SpriteSheet() {\n    }\n\n    SpriteSheet.getCut = getCut;\n    SpriteSheet.getTextures = getTextures;\n    SpriteSheet.preLoad = preLoad;\n    SpriteSheet.fetchCanvas = fetchCanvas;\n    SpriteSheet.spritesheet = {};\n\n    Utils.onDestroy(destroyEverything);\n\n    return SpriteSheet;\n\n });\n"]}