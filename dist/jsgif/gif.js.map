{"version":3,"sources":["../../jsgif/gif.js"],"names":["define","bitsToNum","ba","reduce","s","n","byteToBitArr","bite","a","i","push","Stream","data","len","length","pos","readByte","Error","charCodeAt","readBytes","bytes","read","String","fromCharCode","readUnsigned","lzwDecode","minCodeSize","readCode","size","code","output","clearCode","eoiCode","codeSize","dict","clear","last","concat","apply","parseGIF","st","handler","parseCT","entries","ct","readSubBlocks","parseHeader","hdr","sig","ver","width","height","bits","gctFlag","shift","colorRes","splice","sorted","gctSize","bgColor","pixelAspectRatio","gct","parseExt","block","parseGCExt","blockSize","reserved","disposalMethod","userInput","transparencyGiven","delayTime","transparencyIndex","terminator","gce","parseComExt","comment","com","parsePTExt","ptHeader","ptData","pte","parseAppExt","parseNetscapeExt","unknown","iterations","app","NETSCAPE","parseUnknownAppExt","appData","identifier","authCode","parseUnknownExt","label","extType","parseImg","img","deinterlace","pixels","newPixels","Array","rows","cpRow","toRow","fromRow","fromPixels","slice","offsets","steps","pass","leftPos","topPos","lctFlag","interlaced","lctSize","lct","lzwMinCodeSize","lzwData","parseBlock","sentinel","type","eof","toString","setTimeout","parse","exports"],"mappings":";;AAAAA,OAAO,YAAW;AAClB;AACI,QAAIC,YAAY,SAAZA,SAAY,CAASC,EAAT,EAAa;AACzB,eAAOA,GAAGC,MAAH,CAAU,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAAE,mBAAOD,IAAI,CAAJ,GAAQC,CAAf;AAAmB,SAA9C,EAAgD,CAAhD,CAAP;AACH,KAFD;;AAIA,QAAIC,eAAe,SAAfA,YAAe,CAASC,IAAT,EAAe;AAC9B,YAAIC,IAAI,EAAR;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzBD,cAAEE,IAAF,CAAO,CAAC,EAAEH,OAAQ,KAAKE,CAAf,CAAR;AACH;AACD,eAAOD,CAAP;AACH,KAND;;AAQJ;AACI;;OAfc,CAiBV;AACJ,QAAIG,SAAS,SAATA,MAAS,CAASC,IAAT,EAAe;AACxB,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKC,GAAL,GAAW,KAAKD,IAAL,CAAUE,MAArB;AACA,aAAKC,GAAL,GAAW,CAAX;;AAEA,aAAKC,QAAL,GAAgB,YAAW;AACvB,gBAAI,KAAKD,GAAL,IAAY,KAAKH,IAAL,CAAUE,MAA1B,EAAkC;AAC9B,sBAAM,IAAIG,KAAJ,CAAU,uCAAV,CAAN;AACH;AACD,mBAAOL,KAAKM,UAAL,CAAgB,KAAKH,GAAL,EAAhB,IAA8B,IAArC;AACH,SALD;;AAOA,aAAKI,SAAL,GAAiB,UAASd,CAAT,EAAY;AACzB,gBAAIe,QAAQ,EAAZ;AACA,iBAAK,IAAIX,IAAI,CAAb,EAAgBA,IAAIJ,CAApB,EAAuBI,GAAvB,EAA4B;AACxBW,sBAAMV,IAAN,CAAW,KAAKM,QAAL,EAAX;AACH;AACD,mBAAOI,KAAP;AACH,SAND;;AAQA,aAAKC,IAAL,GAAY,UAAShB,CAAT,EAAY;AACpB,gBAAID,IAAI,EAAR;AACA,iBAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIJ,CAApB,EAAuBI,GAAvB,EAA4B;AACxBL,qBAAKkB,OAAOC,YAAP,CAAoB,KAAKP,QAAL,EAApB,CAAL;AACH;AACD,mBAAOZ,CAAP;AACH,SAND;;AAQA,aAAKoB,YAAL,GAAoB,YAAW;AAAE;AAC7B,gBAAIhB,IAAI,KAAKW,SAAL,CAAe,CAAf,CAAR;AACA,mBAAO,CAACX,EAAE,CAAF,KAAQ,CAAT,IAAcA,EAAE,CAAF,CAArB;AACH,SAHD;AAIH,KAhCD;;AAkCA,QAAIiB,YAAY,SAAZA,SAAY,CAASC,WAAT,EAAsBd,IAAtB,EAA4B;AACxC;AACA,YAAIG,MAAM,CAAV,CAFwC,CAE3B;;AAEb,YAAIY,WAAW,SAAXA,QAAW,CAASC,IAAT,EAAe;AAC1B,gBAAIC,OAAO,CAAX;AACA,iBAAK,IAAIpB,IAAI,CAAb,EAAgBA,IAAImB,IAApB,EAA0BnB,GAA1B,EAA+B;AAC3B,oBAAIG,KAAKM,UAAL,CAAgBH,OAAO,CAAvB,IAA6B,MAAMA,MAAM,CAAZ,CAAjC,EAAkD;AAC9Cc,4BAAQ,KAAKpB,CAAb;AACH;AACDM;AACH;AACD,mBAAOc,IAAP;AACH,SATD;;AAWA,YAAIC,SAAS,EAAb;;AAEA,YAAIC,YAAY,KAAKL,WAArB;AACA,YAAIM,UAAUD,YAAY,CAA1B;;AAEA,YAAIE,WAAWP,cAAc,CAA7B;;AAEA,YAAIQ,OAAO,EAAX;;AAEA,YAAIC,QAAQ,SAARA,KAAQ,GAAW;AACnBD,mBAAO,EAAP;AACAD,uBAAWP,cAAc,CAAzB;AACA,iBAAK,IAAIjB,IAAI,CAAb,EAAgBA,IAAIsB,SAApB,EAA+BtB,GAA/B,EAAoC;AAChCyB,qBAAKzB,CAAL,IAAU,CAACA,CAAD,CAAV;AACH;AACDyB,iBAAKH,SAAL,IAAkB,EAAlB;AACAG,iBAAKF,OAAL,IAAgB,IAAhB;AAEH,SATD;;AAWA,YAAIH,IAAJ;AACA,YAAIO,IAAJ;;AAEA,eAAO,IAAP,EAAa;AACTA,mBAAOP,IAAP;AACAA,mBAAOF,SAASM,QAAT,CAAP;;AAEA,gBAAIJ,SAASE,SAAb,EAAwB;AACpBI;AACA;AACH;AACD,gBAAIN,SAASG,OAAb,EAAsB;;AAEtB,gBAAIH,OAAOK,KAAKpB,MAAhB,EAAwB;AACpB,oBAAIsB,SAASL,SAAb,EAAwB;AACpBG,yBAAKxB,IAAL,CAAUwB,KAAKE,IAAL,EAAWC,MAAX,CAAkBH,KAAKL,IAAL,EAAW,CAAX,CAAlB,CAAV;AACH;AACJ,aAJD,MAIO;AACH,oBAAIA,SAASK,KAAKpB,MAAlB,EAA0B,MAAM,IAAIG,KAAJ,CAAU,mBAAV,CAAN;AAC1BiB,qBAAKxB,IAAL,CAAUwB,KAAKE,IAAL,EAAWC,MAAX,CAAkBH,KAAKE,IAAL,EAAW,CAAX,CAAlB,CAAV;AACH;AACDN,mBAAOpB,IAAP,CAAY4B,KAAZ,CAAkBR,MAAlB,EAA0BI,KAAKL,IAAL,CAA1B;;AAEA,gBAAIK,KAAKpB,MAAL,KAAiB,KAAKmB,QAAtB,IAAmCA,WAAW,EAAlD,EAAsD;AAClD;AACAA;AACH;AACJ;;AAED;AACA;AACA,eAAOH,MAAP;AACH,KAnED;;AAqEJ;AACI,QAAIS,WAAW,SAAXA,QAAW,CAASC,EAAT,EAAaC,OAAb,EAAsB;AACjCA,oBAAYA,UAAU,EAAtB;;AAEA;AACA,YAAIC,UAAU,SAAVA,OAAU,CAASC,OAAT,EAAkB;AAAE;AAC9B,gBAAIC,KAAK,EAAT;AACA,iBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAIkC,OAApB,EAA6BlC,GAA7B,EAAkC;AAC9BmC,mBAAGlC,IAAH,CAAQ8B,GAAGrB,SAAH,CAAa,CAAb,CAAR;AACH;AACD,mBAAOyB,EAAP;AACH,SAND;;AAQA,YAAIC,gBAAgB,SAAhBA,aAAgB,GAAW;AAC3B,gBAAIjB,IAAJ,EAAUhB,IAAV;AACAA,mBAAO,EAAP;AACA,eAAG;AACCgB,uBAAOY,GAAGxB,QAAH,EAAP;AACAJ,wBAAQ4B,GAAGnB,IAAH,CAAQO,IAAR,CAAR;AACH,aAHD,QAGSA,SAAS,CAHlB;AAIA,mBAAOhB,IAAP;AACH,SARD;;AAUA,YAAIkC,cAAc,SAAdA,WAAc,GAAW;AACzB,gBAAIC,MAAM,EAAV;AACAA,gBAAIC,GAAJ,GAAUR,GAAGnB,IAAH,CAAQ,CAAR,CAAV;AACA0B,gBAAIE,GAAJ,GAAUT,GAAGnB,IAAH,CAAQ,CAAR,CAAV;AACA,gBAAI0B,IAAIC,GAAJ,KAAY,KAAhB,EAAuB,MAAM,IAAI/B,KAAJ,CAAU,iBAAV,CAAN,CAJE,CAIkC;;AAE3D8B,gBAAIG,KAAJ,GAAYV,GAAGhB,YAAH,EAAZ;AACAuB,gBAAII,MAAJ,GAAaX,GAAGhB,YAAH,EAAb;;AAEA,gBAAI4B,OAAO9C,aAAakC,GAAGxB,QAAH,EAAb,CAAX;AACA+B,gBAAIM,OAAJ,GAAcD,KAAKE,KAAL,EAAd;AACAP,gBAAIQ,QAAJ,GAAetD,UAAUmD,KAAKI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAV,CAAf;AACAT,gBAAIU,MAAJ,GAAaL,KAAKE,KAAL,EAAb;AACAP,gBAAIW,OAAJ,GAAczD,UAAUmD,KAAKI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAV,CAAd;;AAEAT,gBAAIY,OAAJ,GAAcnB,GAAGxB,QAAH,EAAd;AACA+B,gBAAIa,gBAAJ,GAAuBpB,GAAGxB,QAAH,EAAvB,CAhByB,CAgBa;;AAEtC,gBAAI+B,IAAIM,OAAR,EAAiB;AACbN,oBAAIc,GAAJ,GAAUnB,QAAQ,KAAMK,IAAIW,OAAJ,GAAc,CAA5B,CAAV;AACH;AACDjB,oBAAQM,GAAR,IAAeN,QAAQM,GAAR,CAAYA,GAAZ,CAAf;AACH,SAtBD;;AAwBA,YAAIe,WAAW,SAAXA,QAAW,CAASC,KAAT,EAAgB;AAC3B,gBAAIC,aAAa,SAAbA,UAAa,CAASD,KAAT,EAAgB;AAC7B,oBAAIE,YAAYzB,GAAGxB,QAAH,EAAhB,CAD6B,CACE;;AAE/B,oBAAIoC,OAAO9C,aAAakC,GAAGxB,QAAH,EAAb,CAAX;AACA+C,sBAAMG,QAAN,GAAiBd,KAAKI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAjB,CAJ6B,CAIO;AACpCO,sBAAMI,cAAN,GAAuBlE,UAAUmD,KAAKI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAV,CAAvB;AACAO,sBAAMK,SAAN,GAAkBhB,KAAKE,KAAL,EAAlB;AACAS,sBAAMM,iBAAN,GAA0BjB,KAAKE,KAAL,EAA1B;;AAEAS,sBAAMO,SAAN,GAAkB9B,GAAGhB,YAAH,EAAlB;;AAEAuC,sBAAMQ,iBAAN,GAA0B/B,GAAGxB,QAAH,EAA1B;;AAEA+C,sBAAMS,UAAN,GAAmBhC,GAAGxB,QAAH,EAAnB;;AAEAyB,wBAAQgC,GAAR,IAAehC,QAAQgC,GAAR,CAAYV,KAAZ,CAAf;AACH,aAhBD;;AAkBA,gBAAIW,cAAc,SAAdA,WAAc,CAASX,KAAT,EAAgB;AAC9BA,sBAAMY,OAAN,GAAgB9B,eAAhB;AACAJ,wBAAQmC,GAAR,IAAenC,QAAQmC,GAAR,CAAYb,KAAZ,CAAf;AACH,aAHD;;AAKA,gBAAIc,aAAa,SAAbA,UAAa,CAASd,KAAT,EAAgB;AAC7B;AACA,oBAAIE,YAAYzB,GAAGxB,QAAH,EAAhB,CAF6B,CAEE;AAC/B+C,sBAAMe,QAAN,GAAiBtC,GAAGrB,SAAH,CAAa,EAAb,CAAjB;AACA4C,sBAAMgB,MAAN,GAAelC,eAAf;AACAJ,wBAAQuC,GAAR,IAAevC,QAAQuC,GAAR,CAAYjB,KAAZ,CAAf;AACH,aAND;;AAQA,gBAAIkB,cAAc,SAAdA,WAAc,CAASlB,KAAT,EAAgB;AAC9B,oBAAImB,mBAAmB,SAAnBA,gBAAmB,CAASnB,KAAT,EAAgB;AACnC,wBAAIE,YAAYzB,GAAGxB,QAAH,EAAhB,CADmC,CACJ;AAC/B+C,0BAAMoB,OAAN,GAAgB3C,GAAGxB,QAAH,EAAhB,CAFmC,CAEJ;AAC/B+C,0BAAMqB,UAAN,GAAmB5C,GAAGhB,YAAH,EAAnB;AACAuC,0BAAMS,UAAN,GAAmBhC,GAAGxB,QAAH,EAAnB;AACAyB,4BAAQ4C,GAAR,IAAe5C,QAAQ4C,GAAR,CAAYC,QAA3B,IAAuC7C,QAAQ4C,GAAR,CAAYC,QAAZ,CAAqBvB,KAArB,CAAvC;AACH,iBAND;;AAQA,oBAAIwB,qBAAqB,SAArBA,kBAAqB,CAASxB,KAAT,EAAgB;AACrCA,0BAAMyB,OAAN,GAAgB3C,eAAhB;AACA;AACAJ,4BAAQ4C,GAAR,IAAe5C,QAAQ4C,GAAR,CAAYtB,MAAM0B,UAAlB,CAAf,IAAgDhD,QAAQ4C,GAAR,CAAYtB,MAAM0B,UAAlB,EAA8B1B,KAA9B,CAAhD;AACH,iBAJD;;AAMA,oBAAIE,YAAYzB,GAAGxB,QAAH,EAAhB,CAf8B,CAeC;AAC/B+C,sBAAM0B,UAAN,GAAmBjD,GAAGnB,IAAH,CAAQ,CAAR,CAAnB;AACA0C,sBAAM2B,QAAN,GAAiBlD,GAAGnB,IAAH,CAAQ,CAAR,CAAjB;AACA,wBAAQ0C,MAAM0B,UAAd;AACI,yBAAK,UAAL;AACIP,yCAAiBnB,KAAjB;AACA;AACJ;AACIwB,2CAAmBxB,KAAnB;AACA;AANR;AAQH,aA1BD;;AA4BA,gBAAI4B,kBAAkB,SAAlBA,eAAkB,CAAS5B,KAAT,EAAgB;AAClCA,sBAAMnD,IAAN,GAAaiC,eAAb;AACAJ,wBAAQ0C,OAAR,IAAmB1C,QAAQ0C,OAAR,CAAgBpB,KAAhB,CAAnB;AACH,aAHD;;AAKAA,kBAAM6B,KAAN,GAAcpD,GAAGxB,QAAH,EAAd;AACA,oBAAQ+C,MAAM6B,KAAd;AACI,qBAAK,IAAL;AACI7B,0BAAM8B,OAAN,GAAgB,KAAhB;AACA7B,+BAAWD,KAAX;AACA;AACJ,qBAAK,IAAL;AACIA,0BAAM8B,OAAN,GAAgB,KAAhB;AACAnB,gCAAYX,KAAZ;AACA;AACJ,qBAAK,IAAL;AACIA,0BAAM8B,OAAN,GAAgB,KAAhB;AACAhB,+BAAWd,KAAX;AACA;AACJ,qBAAK,IAAL;AACIA,0BAAM8B,OAAN,GAAgB,KAAhB;AACAZ,gCAAYlB,KAAZ;AACA;AACJ;AACIA,0BAAM8B,OAAN,GAAgB,SAAhB;AACAF,oCAAgB5B,KAAhB;AACA;AApBR;AAsBH,SAxFD;;AA0FA,YAAI+B,WAAW,SAAXA,QAAW,CAASC,GAAT,EAAc;AACzB,gBAAIC,cAAc,SAAdA,WAAc,CAASC,MAAT,EAAiB/C,KAAjB,EAAwB;AACtC;AACA;;AAEA,oBAAIgD,YAAY,IAAIC,KAAJ,CAAUF,OAAOnF,MAAjB,CAAhB;AACA,oBAAIsF,OAAOH,OAAOnF,MAAP,GAAgBoC,KAA3B;AACA,oBAAImD,QAAQ,SAARA,KAAQ,CAASC,KAAT,EAAgBC,OAAhB,EAAyB;AACjC,wBAAIC,aAAaP,OAAOQ,KAAP,CAAaF,UAAUrD,KAAvB,EAA8B,CAACqD,UAAU,CAAX,IAAgBrD,KAA9C,CAAjB;AACAgD,8BAAU1C,MAAV,CAAiBlB,KAAjB,CAAuB4D,SAAvB,EAAkC,CAACI,QAAQpD,KAAT,EAAgBA,KAAhB,EAAuBb,MAAvB,CAA8BmE,UAA9B,CAAlC;AACH,iBAHD;;AAKA;AACA,oBAAIE,UAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAd;AACA,oBAAIC,QAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAd;;AAEA,oBAAIJ,UAAU,CAAd;AACA,qBAAK,IAAIK,OAAO,CAAhB,EAAmBA,OAAO,CAA1B,EAA6BA,MAA7B,EAAqC;AACjC,yBAAK,IAAIN,QAAQI,QAAQE,IAAR,CAAjB,EAAgCN,QAAQF,IAAxC,EAA8CE,SAASK,MAAMC,IAAN,CAAvD,EAAoE;AAChEP,8BAAMC,KAAN,EAAaC,OAAb;AACAA;AACH;AACJ;;AAED,uBAAOL,SAAP;AACH,aAxBD;;AA0BAH,gBAAIc,OAAJ,GAAcrE,GAAGhB,YAAH,EAAd;AACAuE,gBAAIe,MAAJ,GAAatE,GAAGhB,YAAH,EAAb;AACAuE,gBAAI7C,KAAJ,GAAYV,GAAGhB,YAAH,EAAZ;AACAuE,gBAAI5C,MAAJ,GAAaX,GAAGhB,YAAH,EAAb;;AAEA,gBAAI4B,OAAO9C,aAAakC,GAAGxB,QAAH,EAAb,CAAX;AACA+E,gBAAIgB,OAAJ,GAAc3D,KAAKE,KAAL,EAAd;AACAyC,gBAAIiB,UAAJ,GAAiB5D,KAAKE,KAAL,EAAjB;AACAyC,gBAAItC,MAAJ,GAAaL,KAAKE,KAAL,EAAb;AACAyC,gBAAI7B,QAAJ,GAAed,KAAKI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAf;AACAuC,gBAAIkB,OAAJ,GAAchH,UAAUmD,KAAKI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAV,CAAd;;AAEA,gBAAIuC,IAAIgB,OAAR,EAAiB;AACbhB,oBAAImB,GAAJ,GAAUxE,QAAQ,KAAMqD,IAAIkB,OAAJ,GAAc,CAA5B,CAAV;AACH;;AAEDlB,gBAAIoB,cAAJ,GAAqB3E,GAAGxB,QAAH,EAArB;;AAEA,gBAAIoG,UAAUvE,eAAd;;AAEAkD,gBAAIE,MAAJ,GAAaxE,UAAUsE,IAAIoB,cAAd,EAA8BC,OAA9B,CAAb;;AAEA,gBAAIrB,IAAIiB,UAAR,EAAoB;AAAE;AAClBjB,oBAAIE,MAAJ,GAAaD,YAAYD,IAAIE,MAAhB,EAAwBF,IAAI7C,KAA5B,CAAb;AACH;;AAEDT,oBAAQsD,GAAR,IAAetD,QAAQsD,GAAR,CAAYA,GAAZ,CAAf;AACH,SAtDD;;AAwDA,YAAIsB,aAAa,SAAbA,UAAa,GAAW;AACxB,gBAAItD,QAAQ,EAAZ;AACAA,kBAAMuD,QAAN,GAAiB9E,GAAGxB,QAAH,EAAjB;;AAEA,oBAAQM,OAAOC,YAAP,CAAoBwC,MAAMuD,QAA1B,CAAR,GAA+C;AAC3C,qBAAK,GAAL;AACIvD,0BAAMwD,IAAN,GAAa,KAAb;AACAzD,6BAASC,KAAT;AACA;AACJ,qBAAK,GAAL;AACIA,0BAAMwD,IAAN,GAAa,KAAb;AACAzB,6BAAS/B,KAAT;AACA;AACJ,qBAAK,GAAL;AACIA,0BAAMwD,IAAN,GAAa,KAAb;AACA9E,4BAAQ+E,GAAR,IAAe/E,QAAQ+E,GAAR,CAAYzD,KAAZ,CAAf;AACA;AACJ;AACI,0BAAM,IAAI9C,KAAJ,CAAU,sBAAsB8C,MAAMuD,QAAN,CAAeG,QAAf,CAAwB,EAAxB,CAAhC,CAAN,CAdR,CAc4E;AAd5E;;AAiBA,gBAAI1D,MAAMwD,IAAN,KAAe,KAAnB,EAA0BG,WAAWL,UAAX,EAAuB,CAAvB;AAC7B,SAtBD;;AAwBA,YAAIM,QAAQ,SAARA,KAAQ,GAAW;AACnB7E;AACA4E,uBAAWL,UAAX,EAAuB,CAAvB;AACH,SAHD;;AAKAM;AACH,KA9ND;;AAgOJ;AACI,QAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AAChCA,gBAAQjH,MAAR,GAAiBA,MAAjB;AACAiH,gBAAQrF,QAAR,GAAmBA,QAAnB;AACH;AACL;;;AAGI,WAAO,EAAE5B,cAAF,EAAU4B,kBAAV,EAAP;AACH,CAnWD","file":"gif.js","sourcesContent":["define(function() {\n// Generic functions\n    var bitsToNum = function(ba) {\n        return ba.reduce(function(s, n) { return s * 2 + n; }, 0);\n    };\n\n    var byteToBitArr = function(bite) {\n        var a = [];\n        for (var i = 7; i >= 0; i--) {\n            a.push(!!(bite & (1 << i)));\n        }\n        return a;\n    };\n\n// Stream\n    /**\n     * @constructor\n     */ // Make compiler happy.\n    var Stream = function(data) {\n        this.data = data;\n        this.len = this.data.length;\n        this.pos = 0;\n\n        this.readByte = function() {\n            if (this.pos >= this.data.length) {\n                throw new Error('Attempted to read past end of stream.');\n            }\n            return data.charCodeAt(this.pos++) & 0xFF;\n        };\n\n        this.readBytes = function(n) {\n            var bytes = [];\n            for (var i = 0; i < n; i++) {\n                bytes.push(this.readByte());\n            }\n            return bytes;\n        };\n\n        this.read = function(n) {\n            var s = '';\n            for (var i = 0; i < n; i++) {\n                s += String.fromCharCode(this.readByte());\n            }\n            return s;\n        };\n\n        this.readUnsigned = function() { // Little-endian.\n            var a = this.readBytes(2);\n            return (a[1] << 8) + a[0];\n        };\n    };\n\n    var lzwDecode = function(minCodeSize, data) {\n        // TODO: Now that the GIF parser is a bit different, maybe this should get an array of bytes instead of a String?\n        var pos = 0; // Maybe this streaming thing should be merged with the Stream?\n\n        var readCode = function(size) {\n            var code = 0;\n            for (var i = 0; i < size; i++) {\n                if (data.charCodeAt(pos >> 3) & (1 << (pos & 7))) {\n                    code |= 1 << i;\n                }\n                pos++;\n            }\n            return code;\n        };\n\n        var output = [];\n\n        var clearCode = 1 << minCodeSize;\n        var eoiCode = clearCode + 1;\n\n        var codeSize = minCodeSize + 1;\n\n        var dict = [];\n\n        var clear = function() {\n            dict = [];\n            codeSize = minCodeSize + 1;\n            for (var i = 0; i < clearCode; i++) {\n                dict[i] = [i];\n            }\n            dict[clearCode] = [];\n            dict[eoiCode] = null;\n\n        };\n\n        var code;\n        var last;\n\n        while (true) {\n            last = code;\n            code = readCode(codeSize);\n\n            if (code === clearCode) {\n                clear();\n                continue;\n            }\n            if (code === eoiCode) break;\n\n            if (code < dict.length) {\n                if (last !== clearCode) {\n                    dict.push(dict[last].concat(dict[code][0]));\n                }\n            } else {\n                if (code !== dict.length) throw new Error('Invalid LZW code.');\n                dict.push(dict[last].concat(dict[last][0]));\n            }\n            output.push.apply(output, dict[code]);\n\n            if (dict.length === (1 << codeSize) && codeSize < 12) {\n                // If we're at the last code and codeSize is 12, the next code will be a clearCode, and it'll be 12 bits long.\n                codeSize++;\n            }\n        }\n\n        // I don't know if this is technically an error, but some GIFs do it.\n        //if (Math.ceil(pos / 8) !== data.length) throw new Error('Extraneous LZW bytes.');\n        return output;\n    };\n\n// The actual parsing; returns an object with properties.\n    var parseGIF = function(st, handler) {\n        handler || (handler = {});\n\n        // LZW (GIF-specific)\n        var parseCT = function(entries) { // Each entry is 3 bytes, for RGB.\n            var ct = [];\n            for (var i = 0; i < entries; i++) {\n                ct.push(st.readBytes(3));\n            }\n            return ct;\n        };\n\n        var readSubBlocks = function() {\n            var size, data;\n            data = '';\n            do {\n                size = st.readByte();\n                data += st.read(size);\n            } while (size !== 0);\n            return data;\n        };\n\n        var parseHeader = function() {\n            var hdr = {};\n            hdr.sig = st.read(3);\n            hdr.ver = st.read(3);\n            if (hdr.sig !== 'GIF') throw new Error('Not a GIF file.'); // XXX: This should probably be handled more nicely.\n\n            hdr.width = st.readUnsigned();\n            hdr.height = st.readUnsigned();\n\n            var bits = byteToBitArr(st.readByte());\n            hdr.gctFlag = bits.shift();\n            hdr.colorRes = bitsToNum(bits.splice(0, 3));\n            hdr.sorted = bits.shift();\n            hdr.gctSize = bitsToNum(bits.splice(0, 3));\n\n            hdr.bgColor = st.readByte();\n            hdr.pixelAspectRatio = st.readByte(); // if not 0, aspectRatio = (pixelAspectRatio + 15) / 64\n\n            if (hdr.gctFlag) {\n                hdr.gct = parseCT(1 << (hdr.gctSize + 1));\n            }\n            handler.hdr && handler.hdr(hdr);\n        };\n\n        var parseExt = function(block) {\n            var parseGCExt = function(block) {\n                var blockSize = st.readByte(); // Always 4\n\n                var bits = byteToBitArr(st.readByte());\n                block.reserved = bits.splice(0, 3); // Reserved; should be 000.\n                block.disposalMethod = bitsToNum(bits.splice(0, 3));\n                block.userInput = bits.shift();\n                block.transparencyGiven = bits.shift();\n\n                block.delayTime = st.readUnsigned();\n\n                block.transparencyIndex = st.readByte();\n\n                block.terminator = st.readByte();\n\n                handler.gce && handler.gce(block);\n            };\n\n            var parseComExt = function(block) {\n                block.comment = readSubBlocks();\n                handler.com && handler.com(block);\n            };\n\n            var parsePTExt = function(block) {\n                // No one *ever* uses this. If you use it, deal with parsing it yourself.\n                var blockSize = st.readByte(); // Always 12\n                block.ptHeader = st.readBytes(12);\n                block.ptData = readSubBlocks();\n                handler.pte && handler.pte(block);\n            };\n\n            var parseAppExt = function(block) {\n                var parseNetscapeExt = function(block) {\n                    var blockSize = st.readByte(); // Always 3\n                    block.unknown = st.readByte(); // ??? Always 1? What is this?\n                    block.iterations = st.readUnsigned();\n                    block.terminator = st.readByte();\n                    handler.app && handler.app.NETSCAPE && handler.app.NETSCAPE(block);\n                };\n\n                var parseUnknownAppExt = function(block) {\n                    block.appData = readSubBlocks();\n                    // FIXME: This won't work if a handler wants to match on any identifier.\n                    handler.app && handler.app[block.identifier] && handler.app[block.identifier](block);\n                };\n\n                var blockSize = st.readByte(); // Always 11\n                block.identifier = st.read(8);\n                block.authCode = st.read(3);\n                switch (block.identifier) {\n                    case 'NETSCAPE':\n                        parseNetscapeExt(block);\n                        break;\n                    default:\n                        parseUnknownAppExt(block);\n                        break;\n                }\n            };\n\n            var parseUnknownExt = function(block) {\n                block.data = readSubBlocks();\n                handler.unknown && handler.unknown(block);\n            };\n\n            block.label = st.readByte();\n            switch (block.label) {\n                case 0xF9:\n                    block.extType = 'gce';\n                    parseGCExt(block);\n                    break;\n                case 0xFE:\n                    block.extType = 'com';\n                    parseComExt(block);\n                    break;\n                case 0x01:\n                    block.extType = 'pte';\n                    parsePTExt(block);\n                    break;\n                case 0xFF:\n                    block.extType = 'app';\n                    parseAppExt(block);\n                    break;\n                default:\n                    block.extType = 'unknown';\n                    parseUnknownExt(block);\n                    break;\n            }\n        };\n\n        var parseImg = function(img) {\n            var deinterlace = function(pixels, width) {\n                // Of course this defeats the purpose of interlacing. And it's *probably*\n                // the least efficient way it's ever been implemented. But nevertheless...\n\n                var newPixels = new Array(pixels.length);\n                var rows = pixels.length / width;\n                var cpRow = function(toRow, fromRow) {\n                    var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n                    newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n                };\n\n                // See appendix E.\n                var offsets = [0,4,2,1];\n                var steps   = [8,8,4,2];\n\n                var fromRow = 0;\n                for (var pass = 0; pass < 4; pass++) {\n                    for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n                        cpRow(toRow, fromRow)\n                        fromRow++;\n                    }\n                }\n\n                return newPixels;\n            };\n\n            img.leftPos = st.readUnsigned();\n            img.topPos = st.readUnsigned();\n            img.width = st.readUnsigned();\n            img.height = st.readUnsigned();\n\n            var bits = byteToBitArr(st.readByte());\n            img.lctFlag = bits.shift();\n            img.interlaced = bits.shift();\n            img.sorted = bits.shift();\n            img.reserved = bits.splice(0, 2);\n            img.lctSize = bitsToNum(bits.splice(0, 3));\n\n            if (img.lctFlag) {\n                img.lct = parseCT(1 << (img.lctSize + 1));\n            }\n\n            img.lzwMinCodeSize = st.readByte();\n\n            var lzwData = readSubBlocks();\n\n            img.pixels = lzwDecode(img.lzwMinCodeSize, lzwData);\n\n            if (img.interlaced) { // Move\n                img.pixels = deinterlace(img.pixels, img.width);\n            }\n\n            handler.img && handler.img(img);\n        };\n\n        var parseBlock = function() {\n            var block = {};\n            block.sentinel = st.readByte();\n\n            switch (String.fromCharCode(block.sentinel)) { // For ease of matching\n                case '!':\n                    block.type = 'ext';\n                    parseExt(block);\n                    break;\n                case ',':\n                    block.type = 'img';\n                    parseImg(block);\n                    break;\n                case ';':\n                    block.type = 'eof';\n                    handler.eof && handler.eof(block);\n                    break;\n                default:\n                    throw new Error('Unknown block: 0x' + block.sentinel.toString(16)); // TODO: Pad this with a 0.\n            }\n\n            if (block.type !== 'eof') setTimeout(parseBlock, 0);\n        };\n\n        var parse = function() {\n            parseHeader();\n            setTimeout(parseBlock, 0);\n        };\n\n        parse();\n    };\n\n// BEGIN_NON_BOOKMARKLET_CODE\n    if (typeof exports !== 'undefined') {\n        exports.Stream = Stream;\n        exports.parseGIF = parseGIF;\n    }\n// END_NON_BOOKMARKLET_CODE\n\n\n    return { Stream, parseGIF };\n});"]}