"use strict";

var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _typeof = "function" == typeof Symbol && "symbol" == _typeof2(Symbol.iterator) ? function (t) {
  return typeof t === "undefined" ? "undefined" : _typeof2(t);
} : function (t) {
  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t === "undefined" ? "undefined" : _typeof2(t);
};define("utils", [], function () {
  function t() {
    var t = /\/$|index\.html$|next\.html$/g;t.exec(location.pathname) || window.history.pushState(null, "", location.pathname + "/" + location.search + location.hash);
  }function e(t, e) {
    "undefined" == typeof e && (e = "scene.html"), v.destroyEverything(), location.replace("../" + t + "/" + e);
  }function r(t, e) {
    if (Array.isArray(t)) {
      for (var r = [], n = 0; n < t.length; n++) {
        r.push(t[n]), r.push("\n ");
      }console.error.apply(null, r);
    } else console.error(t);if (v.lastError = t, !e) throw new Error("Last error terminated the process.");
  }function n(t, e) {
    return function () {
      t && t(), e && e();
    };
  }function i(t) {
    o("object" === ("undefined" == typeof t ? "undefined" : _typeof(t)), "Pass 'arguments' to expectParams");for (var e = 1; e < arguments.length; e++) {
      var r = null === t[e - 1] ? "null" : Array.isArray(t[e - 1]) ? "array" : _typeof(t[e - 1]);o(arguments[e].split("|").indexOf(r) >= 0, ["Expected argument " + (e - 1) + " to be " + arguments[e] + " NOT " + r, t]);
    }
  }function a(t) {
    o("object" === ("undefined" == typeof t ? "undefined" : _typeof(t)), "Pass 'arguments' to expectParams");for (var e = 1; e < arguments.length; e++) {
      var r = null === t[e - 1] ? "null" : Array.isArray(t[e - 1]) ? "array" : _typeof(t[e - 1]);if (arguments[e].split("|").indexOf(r) < 0) return !1;
    }return !0;
  }function o(t, e) {
    t || r(e ? e : "Assert failed: condition not met.");
  }function s() {
    v.destroyEverything();
  }function u() {
    document.onbeforeunload = window.onbeforeunload = s;
  }function l(t) {
    x = v.combineMethods(t, x);
  }function f() {
    function t(t, e, r) {
      e = e || 0, r = r || this.length;for (var n = e; n < r; n++) {
        this[n] = t;
      }return this;
    }function e(t, e) {
      for (var r = this.length - 1; r >= 0; r--) {
        t[e + r] = this[r];
      }return this;
    }"undefined" == typeof String.prototype.trim && (String.prototype.trim = function () {
      return String(this).replace(/^\s+|\s+$/g, "");
    }), window.requestAnimationFrame || h(), "undefined" == typeof Float32Array.prototype.fill && (Float32Array.prototype.fill = t), "undefined" == typeof Uint32Array.prototype.fill && (Uint32Array.prototype.fill = t), "undefined" == typeof Uint16Array.prototype.fill && (Uint16Array.prototype.fill = t), Float32Array.prototype.splatter = e, Uint32Array.prototype.splatter = e, Uint16Array.prototype.splatter = e, Array.prototype.getFrame = function (t) {
      return t |= 0, this[t % this.length];
    }, Number.prototype.getFrame = function () {
      return this;
    };
  }function h() {
    function t(t) {
      r = setTimeout(e, 1e3 / 60, t);
    }function e(t) {
      clearTimeout(r);var e = Date.now() - n;t(e), n = Date.now();
    }window.requestAnimationFrame = function () {
      return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || t;
    }();var r = void 0,
        n = 0;
  }function c(t, e, r, n, i, a, o) {
    d(t, function (t) {
      e[r] = t;for (var i = 0; i < e.length; i++) {
        if (void 0 === e[i]) return;
      }n.apply(null, e);
    }, i, a, o);
  }function d(t, e, n, i, a) {
    if (Array.isArray(t)) for (var o = new Array(t.length), s = 0; s < t.length; s++) {
      c(t[s], o, s, e);
    } else {
      var u = new XMLHttpRequest();u.overrideMimeType(n ? "text/plain; charset=x-user-defined" : "text/plain; charset=UTF-8"), u.open(i ? i : "GET", t, !0), u.addEventListener("load", function () {
        4 === u.readyState && (200 === u.status ? e(u.responseText) : r(u.responseText));
      }), u.addEventListener("error", function (t) {
        r(t);
      }), u.send(a);
    }
  }function p() {
    this.x = 0, this.y = 0, this.left = -1, this.right = 1, this.top = -1, this.bottom = 1, this.direction = 0;var t = [0, 0];this.reset = function () {
      this.x = 0, this.y = 0, this.left = -1, this.right = 1, this.top = -1, this.bottom = 1, this.direction = 0;
    }, this.current = function () {
      return t[0] = this.x, t[1] = this.y, t;
    }, this.next = function () {
      var t = this.current();switch (this.direction) {case 0:
          this.x++, this.x >= this.right && (this.right++, this.direction = (this.direction + 1) % 4);break;case 1:
          this.y++, this.y >= this.bottom && (this.bottom++, this.direction = (this.direction + 1) % 4);break;case 2:
          this.x--, this.x <= this.left && (this.left--, this.direction = (this.direction + 1) % 4);break;case 3:
          this.y--, this.y <= this.top && (this.top--, this.direction = (this.direction + 1) % 4);}return t;
    };
  }function g() {
    return w;
  }function y() {
    return m(Array.prototype.slice.apply(arguments));
  }function m(t) {
    var e = [];if (e.length = t[0], t.length > 1) for (var r = t.slice(1), n = 0; n < e.length; n++) {
      e[n] = m(r);
    }return e;
  }function v() {
    this.lastError = null;
  }var x = function x() {},
      w = "";return v.handleError = r, v.changeScene = e, v.destroyEverything = x, v.combineMethods = n, v.expectParams = i, v.checkParams = a, v.assert = o, v.fixPath = t, v.onDestroy = l, v.loadAsync = d, v.Roundabout = p, v.getTitle = g, v.makeArray = y, v.nop = function () {}, u(), f(), v;
}), define("loop", ["utils"], function (t) {
  "use strict";
  function e(t) {
    if (o) {
      if (requestAnimationFrame(e), t <= a.time + u) return;a.time = Math.floor(t / u) * u;for (var r = 0; o && r < o.length; r++) {
        o[r]();
      }f++, t - l > 1e3 && (s = f, f = 0, l = t);
    }
  }function r(t) {
    null === o && (o = [], i()), o.push(t);
  }function n(t) {
    if (o) {
      var e = o.indexOf(t);o.splice(e, 1), 0 === o.length && (o = null);
    }
  }function i() {
    e(0);
  }function a() {}var o = null,
      s = 0,
      u = Math.floor(1e3 / 60),
      l = 0,
      f = 0;return a.addLoop = r, a.removeLoop = n, t.onDestroy(a), Object.defineProperty(a, "fps", { enumerable: !1, configurable: !1, get: function get() {
      return s;
    }, set: function set(t) {
      u = Math.floor(1e3 / t);
    } }), a.time = 0, a;
}), define("IDGenerator", [], function () {
  function t() {
    var t = [],
        e = 1;this.recycle = function (e) {
      t.push(e);
    }, this.get = function () {
      return t.length ? t.pop() : e++;
    };
  }return t.prototype.recycle = null, t.prototype.get = null, t;
}), define("gifworker", ["utils", "loop", "IDGenerator"], function (t, e, r) {
  function n() {
    function t(t, e, r) {
      var n = t.img,
          i = t.gce,
          a = i.transparencyGiven ? i.transparencyIndex : null,
          o = i.disposalMethod,
          s = n.lctFlag ? n.lct : r.gct;n.pixels.forEach(function (t, r) {
        a !== t ? (e.data[4 * r] = s[t][0], e.data[4 * r + 1] = s[t][1], e.data[4 * r + 2] = s[t][2], e.data[4 * r + 3] = 255) : 2 !== o && 3 !== o || (e.data[4 * r + 3] = 0);
      });
    }onmessage = function onmessage(e) {
      var r = e.data.frameInfo,
          n = e.data.cData,
          i = e.data.header,
          a = e.data.id;r && n && i && t(r, n, i), postMessage({ id: a, cData: n, frameInfo: r }, [n.data.buffer]);
    };
  }function i(t) {
    t.onmessage = function (t) {
      s[t.data.id](t.data.cData, t.data.frameInfo), u.recycle(t.data.id), delete s[t.data.id];
    };
  }function a(t, e, r, n) {
    var i = u.get();s[i] = n, h.postMessage({ frameInfo: t, cData: e, header: r, id: i }, [e.data.buffer]);
  }function o() {
    h && h.terminate(), h = null, s = null, u = null;
  }var s = [],
      u = new r(),
      l = n.toString();l = l.substring(l.indexOf("{") + 1, l.lastIndexOf("}"));var f = new Blob([l], { type: "application/javascript" }),
      h = new Worker(URL.createObjectURL(f));return i(h), h.send = a, t.onDestroy(o), h;
}), define("jsgif/gif", [], function () {
  var t = function t(_t) {
    return _t.reduce(function (t, e) {
      return 2 * t + e;
    }, 0);
  },
      e = function e(t) {
    for (var e = [], r = 7; r >= 0; r--) {
      e.push(!!(t & 1 << r));
    }return e;
  },
      r = function r(t) {
    this.data = t, this.len = this.data.length, this.pos = 0, this.readByte = function () {
      if (this.pos >= this.data.length) throw new Error("Attempted to read past end of stream.");return 255 & t.charCodeAt(this.pos++);
    }, this.readBytes = function (t) {
      for (var e = [], r = 0; r < t; r++) {
        e.push(this.readByte());
      }return e;
    }, this.read = function (t) {
      for (var e = "", r = 0; r < t; r++) {
        e += String.fromCharCode(this.readByte());
      }return e;
    }, this.readUnsigned = function () {
      var t = this.readBytes(2);return (t[1] << 8) + t[0];
    };
  },
      n = function n(t, e) {
    for (var r, n, i = 0, a = function a(t) {
      for (var r = 0, n = 0; n < t; n++) {
        e.charCodeAt(i >> 3) & 1 << (7 & i) && (r |= 1 << n), i++;
      }return r;
    }, o = [], s = 1 << t, u = s + 1, l = t + 1, f = [], h = function h() {
      f = [], l = t + 1;for (var e = 0; e < s; e++) {
        f[e] = [e];
      }f[s] = [], f[u] = null;
    };;) {
      if (n = r, r = a(l), r !== s) {
        if (r === u) break;if (r < f.length) n !== s && f.push(f[n].concat(f[r][0]));else {
          if (r !== f.length) throw new Error("Invalid LZW code.");f.push(f[n].concat(f[n][0]));
        }o.push.apply(o, f[r]), f.length === 1 << l && l < 12 && l++;
      } else h();
    }return o;
  },
      i = function i(r, _i2) {
    _i2 || (_i2 = {});var a = function a(t) {
      for (var e = [], n = 0; n < t; n++) {
        e.push(r.readBytes(3));
      }return e;
    },
        o = function o() {
      var t, e;e = "";do {
        t = r.readByte(), e += r.read(t);
      } while (0 !== t);return e;
    },
        s = function s() {
      var n = {};if (n.sig = r.read(3), n.ver = r.read(3), "GIF" !== n.sig) throw new Error("Not a GIF file.");n.width = r.readUnsigned(), n.height = r.readUnsigned();var o = e(r.readByte());n.gctFlag = o.shift(), n.colorRes = t(o.splice(0, 3)), n.sorted = o.shift(), n.gctSize = t(o.splice(0, 3)), n.bgColor = r.readByte(), n.pixelAspectRatio = r.readByte(), n.gctFlag && (n.gct = a(1 << n.gctSize + 1)), _i2.hdr && _i2.hdr(n);
    },
        u = function u(n) {
      var a = function a(n) {
        var a = (r.readByte(), e(r.readByte()));n.reserved = a.splice(0, 3), n.disposalMethod = t(a.splice(0, 3)), n.userInput = a.shift(), n.transparencyGiven = a.shift(), n.delayTime = r.readUnsigned(), n.transparencyIndex = r.readByte(), n.terminator = r.readByte(), _i2.gce && _i2.gce(n);
      },
          s = function s(t) {
        t.comment = o(), _i2.com && _i2.com(t);
      },
          u = function u(t) {
        r.readByte();t.ptHeader = r.readBytes(12), t.ptData = o(), _i2.pte && _i2.pte(t);
      },
          l = function l(t) {
        var e = function e(t) {
          r.readByte();t.unknown = r.readByte(), t.iterations = r.readUnsigned(), t.terminator = r.readByte(), _i2.app && _i2.app.NETSCAPE && _i2.app.NETSCAPE(t);
        },
            n = function n(t) {
          t.appData = o(), _i2.app && _i2.app[t.identifier] && _i2.app[t.identifier](t);
        };r.readByte();switch (t.identifier = r.read(8), t.authCode = r.read(3), t.identifier) {case "NETSCAPE":
            e(t);break;default:
            n(t);}
      },
          f = function f(t) {
        t.data = o(), _i2.unknown && _i2.unknown(t);
      };switch (n.label = r.readByte(), n.label) {case 249:
          n.extType = "gce", a(n);break;case 254:
          n.extType = "com", s(n);break;case 1:
          n.extType = "pte", u(n);break;case 255:
          n.extType = "app", l(n);break;default:
          n.extType = "unknown", f(n);}
    },
        l = function l(s) {
      var u = function u(t, e) {
        for (var r = new Array(t.length), n = t.length / e, i = function i(n, _i) {
          var a = t.slice(_i * e, (_i + 1) * e);r.splice.apply(r, [n * e, e].concat(a));
        }, a = [0, 4, 2, 1], o = [8, 8, 4, 2], s = 0, u = 0; u < 4; u++) {
          for (var l = a[u]; l < n; l += o[u]) {
            i(l, s), s++;
          }
        }return r;
      };s.leftPos = r.readUnsigned(), s.topPos = r.readUnsigned(), s.width = r.readUnsigned(), s.height = r.readUnsigned();var l = e(r.readByte());s.lctFlag = l.shift(), s.interlaced = l.shift(), s.sorted = l.shift(), s.reserved = l.splice(0, 2), s.lctSize = t(l.splice(0, 3)), s.lctFlag && (s.lct = a(1 << s.lctSize + 1)), s.lzwMinCodeSize = r.readByte();var f = o();s.pixels = n(s.lzwMinCodeSize, f), s.interlaced && (s.pixels = u(s.pixels, s.width)), _i2.img && _i2.img(s);
    },
        f = function t() {
      var e = {};switch (e.sentinel = r.readByte(), String.fromCharCode(e.sentinel)) {case "!":
          e.type = "ext", u(e);break;case ",":
          e.type = "img", l(e);break;case ";":
          e.type = "eof", _i2.eof && _i2.eof(e);break;default:
          throw new Error("Unknown block: 0x" + e.sentinel.toString(16));}"eof" !== e.type && setTimeout(t, 0);
    },
        h = function h() {
      s(), setTimeout(f, 0);
    };h();
  };return "undefined" != typeof exports && (exports.Stream = r, exports.parseGIF = i), { Stream: r, parseGIF: i };
}), define("gifHandler", ["utils", "loop", "gifworker", "jsgif/gif"], function (t, e, r, n) {
  "use strict";
  function i(t) {
    return f[t] && f[t].block || ".gif" === t.split("?")[0].slice(-4).toLowerCase() || 0 === t.indexOf("data:image/gif;");
  }function a(t) {
    return f[t] || (f[t] = new o(t)), f[t];
  }function o(e) {
    var i = this,
        a = { maxFrameCompleted: 0, framesProcessed: 0, header: null, frameInfos: [], block: null, canvases: [], callbacks: [], frameSlot: null, processNextFrame: function processNextFrame() {
        var t = this.framesProcessed,
            e = this.frameInfos[t];if (e && e.gce && e.img && this.header) {
          var n = document.createElement("canvas");n.style.position = "absolute", n.style.left = 0, n.style.top = 0, n.width = this.header.width, n.height = this.header.height;var i = n.getContext("2d");i.webkitImageSmoothingEnabled = !1, i.imageSmoothingEnabled = !1, i.msImageSmoothingEnabled = !1, this.canvases[t] = n, t > 0 && i.drawImage(this.canvases[t - 1], 0, 0);var a = i.getImageData(0, 0, n.width, n.height),
              o = this,
              s = this.processNextFrame.bind(this);r.send(e, a, this.header, function (t, e) {
            i.putImageData(t, 0, 0), o.callbacks[e.frame] && o.callbacks[e.frame](), o.maxFrameCompleted = e.frame, o.frameInfos[e.frame].ready = !0, s();
          }), this.framesProcessed++;
        }
      }, hdr: function hdr(t) {
        this.header = t, i.width = this.header.width, i.height = this.header.height;
      }, gce: function gce(t) {
        (0 === this.frameInfos.length || this.frameInfos[this.frameInfos.length - 1].gce) && this.frameInfos.push({ gce: null, cycleTime: null, img: null, frame: this.frameInfos.length, ready: !1 });var e = this.frameInfos.length - 1;this.frameInfos[e].gce = t, t.delayTime || (t.delayTime = 1), this.frameInfos[e].cycleTime = 10 * t.delayTime + (0 === e ? 0 : this.frameInfos[e - 1].cycleTime), this.processNextFrame();
      }, img: function img(t) {
        (0 === this.frameInfos.length || this.frameInfos[this.frameInfos.length - 1].img) && this.frameInfos.push({}), this.frameInfos[this.frameInfos.length - 1].img = t, this.processNextFrame();
      }, eof: function eof(t) {
        this.block = t, this.processNextFrame();
      } };t.loadAsync(e, function (t) {
      n.parseGIF(new n.Stream(t), a);
    }, !0), this.frameInfos = a.frameInfos, this.canvases = a.canvases, this.callbacks = a.callbacks, this.gifInfo = a;
  }function s(t) {
    var e = this.gifInfo;if (e.block) {
      var r = this.frameInfos[this.frameInfos.length - 1].cycleTime;if (!e.frameSlot) {
        e.frameSlot = [];for (var n = 0; n < this.frameInfos.length; n++) {
          for (; e.frameSlot.length < this.frameInfos[n].cycleTime;) {
            e.frameSlot.push(n);
          }
        }
      }var i = Math.floor(t % r);return e.frameSlot[i];
    }return e.maxFrameCompleted;
  }function u() {
    f = {};
  }function l() {}var f = {};return o.prototype.width = 0, o.prototype.height = 0, o.prototype.frameInfos = [], o.prototype.canvases = [], o.prototype.callbacks = [], o.prototype.gifInfo = null, o.prototype.getFrame = s, l.getGif = a, l.isGif = i, t.onDestroy(u), l;
}), define("camera", ["threejs", "loop"], function (t, e) {
  "use strict";
  function r() {
    return m;
  }function n(t) {
    t && m !== x ? (m = x, u(v, m)) : t || m !== x || (m = v, u(x, m)), i();
  }function i() {
    m.quaternion.toArray(w.array), w.forwardMovement.set(0, 0, 1), w.forwardMovement.applyQuaternion(m.quaternion);
  }function a() {
    return m.quaternion.equals(b) || (i(), b.copy(m.quaternion)), w;
  }function o() {
    v.position.set(0, 0, 400), x.position.set(0, 0, 400);
  }function s() {
    return m === x;
  }function u(t, e) {
    e.position.copy(t.position), e.quaternion.copy(t.quaternion);
  }function l() {
    return { is3d: s(), position: m.position.toArray(), quaternion: m.quaternion.toArray() };
  }function f(t) {
    n(t.is3d), m.quaternion.fromArray(t.quaternion), m.position.fromArray(t.position), m.updateProjectionMatrix();
  }function h(t, e) {
    var r = -Math.atan2(e - m.position.z, t - m.position.x) - Math.PI / 2;return A.setFromAxisAngle(F, r), A.multiply(q), A.toArray(I);
  }function c() {
    var e = {};return e.groundQuaternionArray = new t.Quaternion().setFromAxisAngle(new t.Vector3(1, 0, 0), -Math.PI / 2).toArray(new Float32Array(4)), e.southQuaternionArray = new t.Quaternion().toArray(new Float32Array(4)), e.northQuaternionArray = new t.Quaternion().setFromAxisAngle(new t.Vector3(0, 1, 0), -Math.PI).toArray(new Float32Array(4)), e.westQuaternionArray = new t.Quaternion().setFromAxisAngle(new t.Vector3(0, 1, 0), -Math.PI / 2).toArray(new Float32Array(4)), e.eastQuaternionArray = new t.Quaternion().setFromAxisAngle(new t.Vector3(0, 1, 0), Math.PI / 2).toArray(new Float32Array(4)), e.ceilingQuaternionArray = new t.Quaternion().setFromAxisAngle(new t.Vector3(1, 0, 0), Math.PI / 2).toArray(new Float32Array(4)), e;
  }function d(t, e) {
    g === t && y === e || (g = t, y = e, v.left = -g / 2, v.right = g / 2, v.top = y / 2, v.bottom = -y / 2, v.updateProjectionMatrix(), x.aspect = g / y, x.updateProjectionMatrix());
  }function p() {}var g = innerWidth,
      y = innerHeight,
      m = void 0,
      v = new t.OrthographicCamera(-g / 2, g / 2, y / 2, -y / 2, .1, 1e6),
      x = new t.PerspectiveCamera(75, g / y, .1, 1e6),
      w = { array: new Float32Array(4), forwardMovement: new t.Vector3(0, 0, 1), version: 0 },
      b = new t.Quaternion(),
      A = new t.Quaternion(),
      I = new Float32Array(4),
      F = new t.Vector3(0, 1, 0),
      q = new t.Quaternion().setFromAxisAngle(new t.Vector3(1, 0, 0), -Math.PI / 2);return p.setCamera3d = n, p.isCamera3d = s, p.getCamera = r, p.setCameraPosition = f, p.getCameraPosition = l, p.getCameraQuaternionData = a, p.shadowQuatArray = h, p.quaternions = c(), p.checkWindowSize = d, o(), n(!0), p;
}), define("objectpool", ["utils"], function (t) {
  function e(t) {
    this.pool = [], this.classObject = t;
  }function r() {
    return this.index >= this.pool.length && this.pool.push(new this.classObject()), this.pool[this.index++];
  }function n() {
    this.index = 0;
  }return e.prototype.classObject = null, e.prototype.pool = null, e.prototype.index = 0, e.prototype.create = r, e.prototype.recycleAll = n, e;
}), define("spriteobject", ["threejs", "objectpool"], function (t, e) {
  "use strict";
  function r() {
    this.position = new t.Vector3(), this.size = new Float32Array(3).fill(0), this.size[2] = 1, this.quaternionArray = new Float32Array(4).fill(0);
  }function n(t, e, r, n, i, a, o, s, u, l) {
    t.position.x = e, t.position.y = r, t.position.z = n, t.size[0] = i, t.size[1] = a, t.hasQuaternionArray = null !== o, t.hasQuaternionArray && (t.quaternionArray[0] = o[0], t.quaternionArray[1] = o[1], t.quaternionArray[2] = o[2], t.quaternionArray[3] = o[3]), t.img = s, t.light = u, t.wave = l;
  }r.prototype.position = null, r.prototype.size = null, r.prototype.hasQuaternionArray = !1, r.prototype.quaternionArray = null, r.prototype.light = 1, r.prototype.wave = 0, r.prototype.img = -1, r.prototype.offset = null, r.prototype.visible = !0;var i = new e(r);return r.create = function (t, e, r, a, o, s, u, l, f) {
    var h = i.create();return n(h, t, e, r, a, o, s, u, l, f), h;
  }, r.clear = function () {
    i.recycleAll();
  }, r;
}), define("packer", ["utils"], function (t) {
  "use strict";
  function e(t, e, r, n, i) {
    if (e + n > u || r + i > u) return !1;if (f[t]) for (var a = 0; a < n; a++) {
      if (f[t][e + a]) for (var o = 0; o < i; o++) {
        if (f[t][e + a][r + o]) return !1;
      }
    }return !0;
  }function r(t) {
    if (t.width <= 1 && t.height <= 1) return null;if (t.width > u || t.height > u) return null;for (var r = Math.ceil(t.width / l), n = Math.ceil(t.height / l), i = 0; i < s; i++) {
      for (var a = 0; a < u / l - r; a++) {
        for (var o = 0; o < u / l - n; o++) {
          if (e(i, a, o, r, n)) return { tex: i, x: a * l, y: o * l };
        }
      }
    }return null;
  }function n(t, e, r, n) {
    f[t] || (f[t] = []);for (var i = Math.ceil((n.width + 1) / l), a = Math.ceil((n.height + 1) / l), o = 0; o < i; o++) {
      f[t][e / l + o] || (f[t][e / l + o] = []);for (var s = 0; s < a; s++) {
        f[t][e / l + o][r / l + s] = n;
      }
    }
  }function i(t) {
    var e = r(t);return e && n(e.tex, e.x, e.y, t), e;
  }function a() {
    f.length = 0;
  }function o() {}var s = 16,
      u = 2048,
      l = 8,
      f = [];return o.getSlot = i, t.onDestroy(a), o;
}), define("gifhandler", ["utils", "loop", "gifworker", "jsgif/gif"], function (t, e, r, n) {
  "use strict";
  function i(t) {
    return f[t] && f[t].block || ".gif" === t.split("?")[0].slice(-4).toLowerCase() || 0 === t.indexOf("data:image/gif;");
  }function a(t) {
    return f[t] || (f[t] = new o(t)), f[t];
  }function o(e) {
    var i = this,
        a = { maxFrameCompleted: 0, framesProcessed: 0, header: null, frameInfos: [], block: null, canvases: [], callbacks: [], frameSlot: null, processNextFrame: function processNextFrame() {
        var t = this.framesProcessed,
            e = this.frameInfos[t];if (e && e.gce && e.img && this.header) {
          var n = document.createElement("canvas");n.style.position = "absolute", n.style.left = 0, n.style.top = 0, n.width = this.header.width, n.height = this.header.height;var i = n.getContext("2d");i.webkitImageSmoothingEnabled = !1, i.imageSmoothingEnabled = !1, i.msImageSmoothingEnabled = !1, this.canvases[t] = n, t > 0 && i.drawImage(this.canvases[t - 1], 0, 0);var a = i.getImageData(0, 0, n.width, n.height),
              o = this,
              s = this.processNextFrame.bind(this);r.send(e, a, this.header, function (t, e) {
            i.putImageData(t, 0, 0), o.callbacks[e.frame] && o.callbacks[e.frame](), o.maxFrameCompleted = e.frame, o.frameInfos[e.frame].ready = !0, s();
          }), this.framesProcessed++;
        }
      }, hdr: function hdr(t) {
        this.header = t, i.width = this.header.width, i.height = this.header.height;
      }, gce: function gce(t) {
        (0 === this.frameInfos.length || this.frameInfos[this.frameInfos.length - 1].gce) && this.frameInfos.push({ gce: null, cycleTime: null, img: null, frame: this.frameInfos.length, ready: !1 });var e = this.frameInfos.length - 1;this.frameInfos[e].gce = t, t.delayTime || (t.delayTime = 1), this.frameInfos[e].cycleTime = 10 * t.delayTime + (0 === e ? 0 : this.frameInfos[e - 1].cycleTime), this.processNextFrame();
      }, img: function img(t) {
        (0 === this.frameInfos.length || this.frameInfos[this.frameInfos.length - 1].img) && this.frameInfos.push({}), this.frameInfos[this.frameInfos.length - 1].img = t, this.processNextFrame();
      }, eof: function eof(t) {
        this.block = t, this.processNextFrame();
      } };t.loadAsync(e, function (t) {
      n.parseGIF(new n.Stream(t), a);
    }, !0), this.frameInfos = a.frameInfos, this.canvases = a.canvases, this.callbacks = a.callbacks, this.gifInfo = a;
  }function s(t) {
    var e = this.gifInfo;if (e.block) {
      var r = this.frameInfos[this.frameInfos.length - 1].cycleTime;if (!e.frameSlot) {
        e.frameSlot = [];for (var n = 0; n < this.frameInfos.length; n++) {
          for (; e.frameSlot.length < this.frameInfos[n].cycleTime;) {
            e.frameSlot.push(n);
          }
        }
      }var i = Math.floor(t % r);return e.frameSlot[i];
    }return e.maxFrameCompleted;
  }function u() {
    f = {};
  }function l() {}var f = {};return o.prototype.width = 0, o.prototype.height = 0, o.prototype.frameInfos = [], o.prototype.canvases = [], o.prototype.callbacks = [], o.prototype.gifInfo = null, o.prototype.getFrame = s, l.getGif = a, l.isGif = i, t.onDestroy(u), l;
}), define("loader", ["utils", "loop"], function (t, e) {
  "use strict";
  function r(t) {
    m = t, document.body.removeChild(u());
  }function n(t, e) {
    var r = new Image();return r.onload = function (t) {
      e.call(r, t), p--, v++, a();
    }, r.crossOrigin = "", c.push({ image: r, url: t }), x++, a(), r;
  }function i(e, r) {
    x++, t.loadAsync(e, function (t) {
      v++, r(t);
    });
  }function a() {
    for (; h < c.length && p < d;) {
      c[h].image.src = c[h].url, h++, p++;
    }h === c.length && (h = 0, c.length = 0, v = 0, x = 0);
  }function o() {
    return x ? v / x : 1;
  }function s() {
    if (g) {
      var t = g.getContext("2d"),
          r = o();y = Math.max(0, y + (r - y) / 10), r >= 1 && (y = 1, e.removeLoop(s)), t.fillRect(10, 10, (g.width - 20) * y, g.height - 20), r >= 1 && m && setTimeout(m, 100);
    }
  }function u() {
    if (!g) {
      g = document.createElement("canvas"), g.id = "loading", g.width = Math.round(2 * innerWidth * 2 / 3), g.height = 50, g.style.left = innerWidth / 2 - g.width / 4 + "px", g.style.top = innerHeight / 2 - g.height / 4 + "px", g.style.width = g.width / 2 + "px", g.style.height = g.height / 2 + "px", g.style.position = "absolute", g.style.backgroundColor = "white", g.style.border = "10px double #00DDDD";var t = g.getContext("2d");t.fillStyle = "#0066aa", e.addLoop(s);
    }return document.body.appendChild(g), g;
  }function l() {
    c.length = 0;
  }function f() {}var h = 0,
      c = [],
      d = 3,
      p = 0,
      g = null,
      y = 0,
      m = null,
      v = 0,
      x = 0;return f.loadImage = n, f.loadFile = i, f.getLoadingProgress = o, f.getLoadingBar = u, f.setOnLoad = r, t.onDestroy(l), f;
}), define("spritesheet", ["threejs", "utils", "gifhandler", "loader", "packer"], function (t, e, r, n, i) {
  "use strict";
  function a(e, r) {
    if (!x[e] && r) {
      var n = x[e] = document.createElement("canvas");if (n.setAttribute("url", e), 0 === e.indexOf("tex-")) {
        n.width = n.height = q;var i = parseInt(e.split("-").pop()),
            a = new t.Texture(n);a.magFilter = t.NearestFilter, a.minFilter = t.LinearMipMapLinearFilter, n.addEventListener("update", g), I[i] = a, n.setAttribute("texture", i.toString()), n.style.position = "absolute", n.style.left = 0, n.style.top = 0;
      } else n.width = n.height = 1;o(n);
    }return x[e];
  }function o(t) {
    var e = t.getContext("2d");e.webkitImageSmoothingEnabled = !1, e.imageSmoothingEnabled = !1, e.msImageSmoothingEnabled = !1;
  }function s(t, e) {
    var r = document.createEvent("CustomEvent");return r.initCustomEvent(t, !1, !1, e || {}), r;
  }function u(t, e) {
    var i = a(e + ":" + t.join("|"));if (i) return i;if (t.length > 1) {
      i = a(e + ":" + t.join("|"), !0);var h = t.slice(0, t.length - 1),
          c = t[t.length - 1],
          d = u(h, e);return i.setAttribute("base-url", d.getAttribute("base-url")), f(d, c, i), d.addEventListener("update", function (t) {
        var e = t.currentTarget;f(e, c, i), i.dispatchEvent(s("update"));
      }), i;
    }var p = t[0];i = a(e + ":" + p, !0);var g = p.split("x");if (2 !== g.length || isNaN(parseInt(g[0])) || isNaN(parseInt(g[1]))) {
      if (r.isGif(p)) {
        var y = r.getGif(p);i.setAttribute("animated", !0), i.setAttribute("base-url", p), y.frameInfos[e] && y.frameInfos[e].ready ? l(y, e, i) : y.callbacks[e] = l.bind(null, y, e, i);
      } else {
        i.setAttribute("base-url", p);var m = n.loadImage(p, function () {
          i.width = m.naturalWidth, i.height = m.naturalHeight, o(i), i.getContext("2d").drawImage(m, 0, 0), i.dispatchEvent(s("update"));
        });
      }
    } else i.width = parseInt(g[0]), i.height = parseInt(g[1]);return i;
  }function l(t, e, r) {
    r.width = t.width, r.height = t.height, o(r), r.getContext("2d").drawImage(t.canvases[e], 0, 0), r.dispatchEvent(s("update"));
  }function f(t, e, r) {
    e = e.split("?")[0];var n = r.getContext("2d"),
        i = e.split(",");if (4 === i.length && i.every(function (t) {
      return !isNaN(t);
    })) {
      i = i.map(function (t) {
        return parseInt(t);
      });var a = Math.min(t.width - i[0], i[2]),
          s = Math.min(t.height - i[1], i[3]);a > 0 && s > 0 && (r.width = a, r.height = s, o(r), n.drawImage(t, i[0], i[1], a, s, 0, 0, a, s));
    } else if (0 === e.indexOf("scale:")) {
      if (t.width > 1 && t.height > 1) {
        var u = e.split(":")[1].split(",");if (r.width = Math.ceil(t.width * Math.abs(u[0])), r.height = Math.ceil(t.height * Math.abs(u[1 % u.length])), o(r), u[0] < 0 || u[1 % u.length] < 0) {
          var l = [u[0] < 0 ? -1 : 1, u[1 % u.length] < 0 ? -1 : 1];n.translate(l[0] < 0 ? r.width : 0, l[1] < 0 ? r.height : 0), n.scale(l[0], l[1]);
        }n.drawImage(t, 0, 0, t.width, t.height, 0, 0, r.width, r.height), n.restore();
      }
    } else if (0 === e.indexOf("border")) {
      r.width = t.width, r.height = t.height, o(r);var f = e.split(":")[1] || 1;f.indexOf("%") > 0 && (f = Math.round(parseFloat(f.split("%")[0]) / 100 * Math.min(r.width, r.height))), n.drawImage(t, 0, 0), n.beginPath();for (var h = 0; h < f; h++) {
        n.rect(h, h, t.width - 1 - 2 * h, t.height - 1 - 2 * h);
      }n.stroke();
    } else if (0 === e.indexOf("text:")) r.width = t.width, r.height = t.height, o(r), n.fillStyle = "#000000", n.font = "18px Comic", n.fillText(e.split("text:")[1], 0, t.height);else if (0 === e.indexOf("shadow")) {
      r.width = t.width, r.height = t.height, o(r);for (var c = t.getContext("2d"), d = c.getImageData(0, 0, t.width, t.height), p = 0; p < d.data.length; p += 4) {
        0 !== d.data[p + 3] && (d.data[p] = 0, d.data[p + 1] = 0, d.data[p + 2] = 0, d.data[p + 3] = 127);
      }n.putImageData(d, 0, 0);
    } else 0 === e.indexOf("cross") && (r.width = t.width, r.height = t.height, o(r), n.drawImage(t, 0, 0), n.beginPath(), n.moveTo(t.width / 2, 0), n.lineTo(t.width / 2, t.height), n.moveTo(0, t.height / 2), n.lineTo(t.width, t.height / 2), n.stroke());
  }function h(t, e) {
    var r = b[t],
        n = r && r.gif ? r.gif.getFrame(e) : 0;return r && r.cut[n] && r.cut[n].ready ? r.cut[n] : r && r.url ? (r = c(r.url, n), r.cut[n]) : null;
  }function c(t, e) {
    if (w[t] && w[t].cut[e] && w[t].cut[e].ready) return w[t];var n = u(t.split("|"), e),
        a = i.getSlot(n),
        o = w[t];if (o || (o = { index: A++, url: t, baseUrl: null, cut: [], animated: !1 }, w[t] = o, b[o.index] = o), o.cut[e] || (o.cut[e] = { tex: 0, uv: null, ready: !1, url: t, baseUrl: null }), a) {
      F[n.getAttribute("url")] = a, n.addEventListener("update", p), n.dispatchEvent(s("update"));var l = a.x / q,
          f = a.y / q,
          h = (n.width - 1) / q,
          c = (n.height - 1) / q,
          d = C.attributes.uv.array,
          g = [l, 1 - f - c, l + h, 1 - f];o.gif = "true" === n.getAttribute("animated") ? r.getGif(o.url) : null, o.cut[e].baseUrl = o.baseUrl = n.getAttribute("base-url"), o.cut[e].tex = a.tex, o.cut[e].uv = new Float32Array(d.length);for (var y = 0; y < d.length; y++) {
        o.cut[e].uv[y] = g[2 * d[y] + y % 2];
      }return o.cut[e].ready = !0, o;
    }return o;
  }function d(t, e) {
    if (void 0 === e && (e = v.spritesheet), "string" != typeof t) {
      for (var r in t) {
        if (t.hasOwnProperty(r)) {
          e[r] || (e[r] = []);var n = v.preLoad(t[r], e[r]);null !== n && (e[r] = n);
        }
      }return e;
    }var i = c(t, 0);if (i) return i.index;
  }function p(t) {
    var e = t.currentTarget,
        r = e.getAttribute("url"),
        n = F[r],
        i = a("tex-" + n.tex, !0);i.getContext("2d").drawImage(e, n.x, n.y), i.dispatchEvent(s("update"));
  }function g(t) {
    var e = t.currentTarget;I[parseInt(e.getAttribute("texture"))].needsUpdate = !0;
  }function y() {
    I.forEach(function (t) {
      t && t.dispose();
    }), x = {}, w = {}, F = {}, I = [null];
  }function m() {
    return I;
  }function v() {}var x = {},
      w = {},
      b = [],
      A = 0,
      I = [null],
      F = {},
      q = 2048,
      C = new t.PlaneBufferGeometry(1, 1);return v.getCut = h, v.getTextures = m, v.preLoad = d, v.fetchCanvas = u, v.spritesheet = {}, e.onDestroy(y), v;
}), define("turbosort", [], function () {
  function t(t, e, r) {
    for (var n = u(t[e]), i = n, a = n, o = n, s = !0, f = 1; f < r; f++) {
      var h = u(t[e + f]);o > h ? (s = !1, h < i && (i = h)) : h > a && (a = h), o = h;
    }return l.min = i, l.max = a, l.inOrder = s, l;
  }function e(t) {
    return t;
  }function r(t, r, i) {
    t && (r = r ? Math.min(r, t.length) : t.length, r > 1 && (u = i ? i : e, n(t, 0, r ? r : t.length)));
  }function n(e, r, l) {
    var f = t(e, r, l);if (!f.inOrder) {
      var h = f.min,
          c = f.max,
          d = c - h;if (0 !== d) {
        var p = Math.min(l, a),
            g = void 0,
            y = void 0;for (g = 0; g < p; g++) {
          s[g] = 0;
        }for (s[p] = 1, g = 0; g < l; g++) {
          y = Math.floor((p - 1) * (u(e[g + r]) - h) / d), s[y]++;
        }for (g = 0; g < p; g++) {
          o[g] = 0;
        }for (o[p] = r + l, o[0] = r, g = 1; g < p; g++) {
          o[g] = o[g - 1] + s[g - 1];
        }for (var m = r, v = 0; v < p;) {
          y = Math.floor((p - 1) * (u(e[m]) - h) / d);var x = o[y] + --s[y];for (i(e, m, x); !s[v];) {
            v++;
          }m = o[v];
        }for (g = 0; g < p; g++) {
          s[g] = o[g + 1] - o[g];
        }for (g = 0; g < p; g++) {
          s[g] > 1 && n(e, o[g], s[g]);
        }
      }
    }
  }function i(t, e, r) {
    var n = t[e];t[e] = t[r], t[r] = n;
  }var a = 1e6,
      o = new Uint32Array(a + 1),
      s = new Uint32Array(a + 1),
      u = e,
      l = { min: 0, max: 0, inOrder: !1 };return r;
}), define("shaders/fragment-shader.glsl", [], function () {
  return "\n    \nuniform sampler2D texture[ 16 ];\nvarying vec2 vUv;\nvarying float vTex;\nvarying float vLight;\n\nvoid main() {\n    vec2 uv = vUv;\n\n    int iTex = int(vTex);\n\n    if(iTex==0) {\n        gl_FragColor = texture2D( texture[0],  uv);\n    } else if(iTex==1) {\n        gl_FragColor = texture2D( texture[1],  uv);\n    } else if(iTex==2) {\n        gl_FragColor = texture2D( texture[2],  uv);\n    } else if(iTex==3) {\n        gl_FragColor = texture2D( texture[3],  uv);\n    } else if(iTex==4) {\n        gl_FragColor = texture2D( texture[4],  uv);\n    } else if(iTex==5) {\n        gl_FragColor = texture2D( texture[5],  uv);\n    } else if(iTex==6) {\n        gl_FragColor = texture2D( texture[6],  uv);\n    } else if(iTex==7) {\n        gl_FragColor = texture2D( texture[7],  uv);\n    } else if(iTex==8) {\n        gl_FragColor = texture2D( texture[8],  uv);\n    } else if(iTex==9) {\n        gl_FragColor = texture2D( texture[9],  uv);\n    } else if(iTex==10) {\n        gl_FragColor = texture2D( texture[10],  uv);\n    } else if(iTex==11) {\n        gl_FragColor = texture2D( texture[11],  uv);\n    } else if(iTex==12) {\n        gl_FragColor = texture2D( texture[12],  uv);\n    } else if(iTex==13) {\n        gl_FragColor = texture2D( texture[13],  uv);\n    } else if(iTex==14) {\n        gl_FragColor = texture2D( texture[14],  uv);\n    } else if(iTex==15) {\n        gl_FragColor = texture2D( texture[15],  uv);\n    }\n\n    gl_FragColor.x *= vLight;\n    gl_FragColor.y *= vLight;\n    gl_FragColor.z *= vLight;\n//        gl_FragColor.w *= vLight;\n//    gl_FragColor.w = .5;\n}\n\n    ";
}), define("shaders/vertex-shader.glsl", [], function () {
  return "\n    \nvarying vec2 vUv;\nattribute float tex;\nattribute float light;\nattribute float wave;\nattribute vec3 spot;\nattribute vec4 quaternion;\nvarying float vTex;\nvarying float vLight;\nuniform vec3 vCam;\nuniform float curvature;\nuniform float time;\n\nvoid main()  {\n    vTex = tex;\n    vUv = uv;\n\n    vec3 newPosition = rotateVectorByQuaternion( position - spot, quaternion ) + spot;\n    vLight = 1.0/ sqrt(500.0 / distance(newPosition, vCam)) * light;\n\n    float dist = distance(newPosition, vCam);\n    if (curvature > 0.0) {\n        newPosition.z = newPosition.z - curvature * (dist*dist)/20000.0;\n    }\n    if (wave > 0.0) {\n        newPosition.z = newPosition.z + wave * sin(newPosition.x*5.0 - newPosition.y*7.0 + time);\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4(newPosition, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n}    \n\n    ";
}), define("shaders/vertex-shader-common.glsl", [], function () {
  return "\n\nvec3 rotateVectorByQuaternion( in vec3 v, in vec4 q ) {\n\n    vec3 dest = vec3( 0.0 );\n\n    float x = v.x, y  = v.y, z  = v.z;\n    float qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n    // calculate quaternion * vector\n\n    float ix =  qw * x + qy * z - qz * y,\n          iy =  qw * y + qz * x - qx * z,\n          iz =  qw * z + qx * y - qy * x,\n          iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quaternion\n\n    dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return dest;\n\n}\n\nvec4 axisAngleToQuaternion( in vec3 axis, in float angle ) {\n\n    vec4 dest = vec4( 0.0 );\n\n    float halfAngle = angle / 2.0,\n          s = sin( halfAngle );\n\n    dest.x = axis.x * s;\n    dest.y = axis.y * s;\n    dest.z = axis.z * s;\n    dest.w = cos( halfAngle );\n\n    return dest;\n\n}    \n    \n    ";
}), define("shader", ["shaders/fragment-shader.glsl", "shaders/vertex-shader.glsl", "shaders/vertex-shader-common.glsl"], function (t, e, r) {
  return { fragmentShader: t, vertexShader: r + e };
}), define("spriterenderer", ["threejs", "utils", "spriteobject", "spritesheet", "camera", "turbosort", "shader", "loop"], function (t, e, r, n, i, a, o, s) {
  "use strict";
  function u() {
    this.images = [], this.imageOrder = [], this.imageCount = 0, this.mesh = h(this), this.curvature = 0;var t = this;this.display = function (e) {
      var r = t.imageCount,
          a = t.images[r],
          o = e && e.visible ? n.getCut(e.img, a ? a.time + s.time : s.time) : null;if (o && o.ready) {
        if (!a) {
          a = t.images[r] = new l(), a.index = r, a.time = 1e4 * Math.random() + s.time;for (var u = 0; u < I.length; u++) {
            a.indexArray[u] = I[u] + 4 * a.index;
          }
        }var f = e.hasQuaternionArray ? e.quaternionArray : i.getCameraQuaternionData().array;if (a.quaternionArray[0] === f[0] && a.quaternionArray[1] === f[1] && a.quaternionArray[2] === f[2] && a.quaternionArray[3] === f[3] || (f.splatter(a.quaternionArray, 0).splatter(a.quaternionArray, 4).splatter(a.quaternionArray, 8).splatter(a.quaternionArray, 12), a.quatDirty = !0), e.position.x !== a.position.x || e.position.y !== a.position.y || e.position.z !== a.position.z) {
          a.position.x = e.position.x, a.position.y = e.position.y, a.position.z = e.position.z;for (var h = 0; h < 4; h++) {
            a.spotArray[3 * h] = a.position.x, a.spotArray[3 * h + 1] = a.position.y, a.spotArray[3 * h + 2] = a.position.z;
          }a.positionDirty = !0;
        }if (e.size[0] !== a.size[0] || e.size[1] !== a.size[1] || e.size[2] !== a.size[2] || a.positionDirty) {
          a.size[0] = e.size[0], a.size[1] = e.size[1], a.size[2] = e.size[2];for (var c = b.attributes.position.array, d = 0; d < c.length; d++) {
            a.vertices[d] = c[d] * e.size[d % 3] + a.spotArray[d];
          }a.verticesDirty = !0;
        }a.uv !== o.uv && (a.uv = o.uv, a.uvDirty = !0), a.tex !== o.tex && (a.tex = o.tex, a.texDirty = !0), a.light !== e.light && (a.light = e.light, a.lightDirty = !0), a.wave !== e.wave && (a.wave = e.wave, a.waveDirty = !0), a.spriteObject = e, t.imageOrder[r] = a, t.imageCount++;
      }return a;
    }, F.push(this);
  }function l() {
    this.position = new t.Vector3(), this.spotArray = new Float32Array(3 * A), this.size = new Float32Array(3), this.vertices = new Float32Array(b.attributes.position.array.length), this.quaternionArray = new Float32Array(4 * A), this.indexArray = new Uint16Array(I.length);
  }function f() {
    this.imageCount = 0, r.clear();
  }function h(e) {
    var r = new t.Mesh(c(), new t.MeshBasicMaterial());return r.material = new t.ShaderMaterial({ uniforms: q = { texture: { type: "tv", get value() {
            return n.getTextures();
          } }, vCam: { type: "v3", get value() {
            return i.getCamera().position;
          } }, curvature: { type: "f", get value() {
            return e.curvature;
          } }, time: { type: "f", get value() {
            return performance.now() / 100;
          } } }, vertexShader: o.vertexShader, fragmentShader: o.fragmentShader, transparent: !0, depthWrite: !1, depthTest: !0 }), r.frustumCulled = !1, r;
  }function c() {
    var e = new t.BufferGeometry();return e.attributes.position = new t.BufferAttribute(new Float32Array(0), 3), e.attributes.spot = new t.BufferAttribute(new Float32Array(0), 3), e.attributes.quaternion = new t.BufferAttribute(new Float32Array(0), 4), e.attributes.uv = new t.BufferAttribute(new Float32Array(0), 2), e.attributes.tex = new t.BufferAttribute(new Float32Array(0), 1), e.attributes.light = new t.BufferAttribute(new Float32Array(0), 1), e.attributes.wave = new t.BufferAttribute(new Float32Array(0), 1), e.index = new t.BufferAttribute(new Uint16Array(0), 1), e;
  }function d(t, e) {
    for (var r = i.getCamera(), n = 0; n < e; n++) {
      t[n].zIndex = -r.position.distanceToManhattan(t[n].position);
    }C(t, e), a(t, e, g);
  }function p(t) {
    C = t ? t : function () {};
  }function g(t) {
    return t.zIndex;
  }function y() {
    var e = this.imageCount,
        r = e * A,
        n = void 0,
        i = this.mesh,
        a = i.geometry;if (a.attributes.position.count < r && (n = a.attributes.position, a.attributes.position = new t.BufferAttribute(new Float32Array(e * A * 3), 3), n && a.attributes.position.copyArray(n.array), a.attributes.position.setDynamic(!0)), a.attributes.spot.count < r && (n = a.attributes.spot, a.attributes.spot = new t.BufferAttribute(new Float32Array(e * A * 3), 3), n && a.attributes.spot.copyArray(n.array), a.attributes.spot.setDynamic(!0)), a.attributes.quaternion.count < r && (n = a.attributes.quaternion, a.attributes.quaternion = new t.BufferAttribute(new Float32Array(e * A * 4), 4), n && a.attributes.quaternion.copyArray(n.array), a.attributes.quaternion.setDynamic(!0)), a.attributes.uv.count < r && (n = a.attributes.uv, a.attributes.uv = new t.BufferAttribute(new Float32Array(e * A * 2), 2), n && a.attributes.uv.copyArray(n.array), a.attributes.uv.setDynamic(!0)), a.attributes.tex.count < r && (n = a.attributes.tex, a.attributes.tex = new t.BufferAttribute(new Float32Array(e * A), 1), n && a.attributes.tex.copyArray(n.array), a.attributes.tex.setDynamic(!0)), a.attributes.light.count < r && (n = a.attributes.light, a.attributes.light = new t.BufferAttribute(new Float32Array(e * A), 1), n && a.attributes.light.copyArray(n.array), a.attributes.light.setDynamic(!0)), a.attributes.wave.count < r && (n = a.attributes.wave, a.attributes.wave = new t.BufferAttribute(new Float32Array(e * A), 1), n && a.attributes.wave.copyArray(n.array), a.attributes.wave.setDynamic(!0)), a.index.count < e * b.index.array.length) {
      n = a.index;var o = b.index.array;a.index = new t.BufferAttribute(new Uint16Array(e * o.length), 1), n && a.index.copyArray(n.array), a.index.setDynamic(!0);
    }d(this.imageOrder, e);
  }function m() {
    this.render(), this.processGraphics();
  }function v() {
    for (var t = this.images, e = this.imageOrder, r = this.imageCount, n = this.mesh.geometry, i = n.attributes.quaternion.array, a = n.attributes.spot.array, o = n.attributes.position.array, s = n.attributes.tex.array, u = n.attributes.light.array, l = n.attributes.wave.array, f = n.attributes.uv.array, h = n.index.array, c = !1, d = !1, p = !1, g = !1, y = !1, m = !1, v = !1, x = 0; x < r; x++) {
      var w = t[x],
          A = w.index;w.quatDirty && (w.quaternionArray.splatter(i, 16 * A), w.quatDirty = !1, c = !0), w.positionDirty && (w.spotArray.splatter(a, 12 * A), w.positionDirty = !1, d = !0), w.verticesDirty && (w.vertices.splatter(o, 12 * A), w.verticesDirty = !1, g = !0), w.uvDirty && (w.uv.splatter(f, 8 * A), w.uvDirty = !1, y = !0), w.texDirty && (s.fill(w.tex, 4 * A, 4 * A + 4), w.texDirty = !1, p = !0), w.lightDirty && (u.fill(w.light, 4 * A, 4 * A + 4), w.lightDirty = !1, m = !0), w.waveDirty && (l.fill(w.wave, 4 * A, 4 * A + 4), w.waveDirty = !1, v = !0);
    }for (var I = 0; I < r; I++) {
      e[I].indexArray.splatter(h, 6 * I);
    }0 === n.drawRange.start && n.drawRange.count === r * b.index.count || n.setDrawRange(0, r * b.index.count), m && (n.attributes.light.needsUpdate = !0), v && (n.attributes.wave.needsUpdate = !0), c && (n.attributes.quaternion.needsUpdate = !0), d && (n.attributes.spot.needsUpdate = !0), g && (n.attributes.position.needsUpdate = !0), p && (n.attributes.tex.needsUpdate = !0), y && (n.attributes.uv.needsUpdate = !0), n.index.needsUpdate = !0, this.clear();
  }function x() {
    for (var t = 0; t < F.length; t++) {
      F[t].destroy();
    }F.length = 0;
  }function w() {
    this.mesh && (this.mesh.geometry.dispose(), this.mesh.material.dispose()), this.mesh = null, this.images.length = 0, this.imageCount = 0;
  }var b = new t.PlaneBufferGeometry(1, 1),
      A = b.attributes.position.count,
      I = b.index.array,
      F = [],
      q = null,
      C = function C() {};return u.prototype.destroy = w, u.prototype.render = y, u.prototype.updateGraphics = m, u.prototype.clear = f, u.prototype.processGraphics = v, l.prototype.index = 0, l.prototype.position = null, l.prototype.spotArray = null, l.prototype.indexArray = null, l.prototype.tex = -1, l.prototype.size = null, l.prototype.uv = null, l.prototype.vertices = null, l.prototype.light = 1, l.prototype.wave = 0, l.prototype.zIndex = 0, l.prototype.quaternionArray = null, l.prototype.positionDirty = !0, l.prototype.verticesDirty = !0, l.prototype.texDirty = !0, l.prototype.uvDirty = !0, l.prototype.lightDirty = !0, l.prototype.waveDirty = !0, l.prototype.quatDirty = !0, u.setIndexProcessor = p, e.onDestroy(x), u;
}), define("collection", ["utils", "spritesheet", "spriteobject", "camera"], function (t, e, r, n) {
  "use strict";
  function i(e, r, n) {
    if (this.options = e || {}, this.getSprite = r ? r : t.nop, n) this.forEach = n.bind(this);else switch (this.options.type) {case "grid":
        break;default:
        t.handleError("Collection type not recognized");}
  }function a(t) {
    for (var e = this.options.x, r = this.options.y, n = this.options.width, i = this.options.height, a = n * i, o = this.options.count || 1, s = a * o, u = 0; u < s; u++) {
      var l = e + u % n,
          f = r + Math.floor(u / n) % i,
          h = Math.floor(u / a),
          c = this.getSprite(l, f, h);c && (c.forEach ? c.forEach(t) : t(c));
    }
  }function o() {}function s(t) {
    var n = t.x,
        i = t.y,
        a = t.index,
        o = cellSize,
        s = 1,
        u = e.spritesheet.sprite[a];return r.create(n * cellSize, i * cellSize, o / 2, o, o, null, s, u);
  }function u(t) {
    return f.length = 0, cube.faces.push(r.create(x * cellSize, y * cellSize, size / 2, size, size, n.quaternions.southQuaternionArray, light, img)), f;
  }function l(t) {
    function e(t, e, r) {
      this.uid = ++p, h[this.uid] = this, this.index = r, this.enterArea(t, e);
    }function r(t, e) {
      return Math.abs(1331 * t ^ 312 + 131 * e) % l.length;
    }function a(t, e) {
      return t = Math.floor(t / f), e = Math.floor(e / f), r(t, e);
    }function o() {
      var t = n.getCamera(),
          e = t.position.x,
          r = t.position.y;return g.x = Math.round(e / c), g.y = Math.round(r / c) + 6, g;
    }var l = [];l.length = 1e6;var f = 50,
        h = [],
        c = 64,
        d = function d(t) {
      switch (t.type) {case "face":
          return s(t);case "cube":
          return u(t);}
    };t.spriteFunction && (d = t.spriteFunction);var p = 0;e.prototype.leaveArea = function () {
      var t = a(this.x, this.y),
          e = l[t];e && e[this.uid] && delete e[this.uid];
    }, e.prototype.enterArea = function (t, e) {
      this.x = t, this.y = e;var r = a(this.x, this.y),
          n = l[r] || (l[r] = {});n[this.uid] = this;
    }, e.prototype.move = function (t, e) {
      this.leaveArea(), this.enterArea(t, e);
    };var g = { x: 0, y: 0 },
        y = new i(t, d, function (t) {
      for (var e = o(), n = Math.floor(e.x / f), i = Math.floor(e.y / f), a = 1, s = i - a; s <= i + a; s++) {
        for (var u = n - a; u <= n + a; u++) {
          var h = r(u, s),
              c = l[h];if (c) for (var d in c) {
            var p = c[d],
                g = this.getSprite(p);Array.isArray(g) ? g.forEach(t) : t(g);
          }
        }
      }
    });y.create = function (t, r, n) {
      return new e(t, r, n);
    };var m = [];return y.get = function (t, e) {
      var r = a(t, e),
          n = l[r];if (m.length = 0, n) for (var i = n.getOwnPropertyNames(), o = 0; o < pros.length; o++) {
        var s = n[i[o]];Math.floor(s.x) === t && Math.floor(s.y) === e && m.push(s);
      }return m.length ? m : null;
    }, y.find = function (t) {
      return h[t];
    }, y;
  }i.prototype.pos = null, i.prototype.size = null, i.prototype.getSprite = t.nop, i.prototype.forEach = a, i.prototype.options = null, i.prototype.getSprite = t.nop, i.prototype.isCollection = !0, i.prototype.get = t.nop, i.prototype.find = t.nop, i.prototype.create = t.nop;var f = [];return i.createSpriteCollection = l, t.onDestroy(o), i;
}), define("mouse", ["utils"], function (t) {
  "use strict";
  function e(t) {
    if (void 0 === t.target.attributes.tap) {
      var e = t.changedTouches;if (e) for (var r = 0; r < e.length; r++) {
        var n = e[r];m[n.identifier] = n.pageX, v[n.identifier] = n.pageY;
      } else d.x = t.pageX, d.y = t.pageY;w = !0;for (var r = 0; r < p.length; r++) {
        p[r](null, null, !0, t.pageX, t.pageY);
      }if (e && 2 === e.length) {
        var i = e[0].pageX - e[1].pageY,
            a = e[0].pageY - e[1].pageY,
            o = Math.sqrt(i * i + a * a);x = o;
      }
    }t.preventDefault();
  }function r(t) {
    var e = !1;if (t.changedTouches) {
      for (var r = t.changedTouches, n = 0; n < r.length; n++) {
        var i = r[n];delete m[i.identifier], delete v[i.identifier];
      }for (var n in m) {
        e = !0;
      }
    }for (var n = 0; n < p.length; n++) {
      p[n](null, null, e, t.pageX, t.pageY);
    }w = !1, t.preventDefault();
  }function n(t) {
    t = t || event;var e = t.changedTouches;if (e) {
      if (w) {
        for (var r = 0, n = 0, i = 0; i < e.length; i++) {
          var a = e[i];r += a.pageX - m[a.identifier], n += a.pageY - v[a.identifier], m[a.identifier] = a.pageX, v[a.identifier] = a.pageY;
        }for (var i = 0; i < p.length; i++) {
          p[i](r, n, !0, t.pageX, t.pageY);
        }if (y.length && 2 === e.length) {
          for (var r = e[0].pageX - e[1].pageY, n = e[0].pageY - e[1].pageY, o = Math.sqrt(r * r + n * n), s = o - x, i = 0; i < y.length; i++) {
            y[i](s);
          }x = o;
        }
      }
    } else {
      var u = "buttons" in t && 1 === t.buttons || 1 === (t.which || t.button);if (u && w) {
        var l = t.pageX,
            f = t.pageY,
            r = l - d.x,
            n = f - d.y;d.x = l, d.y = f;for (var i = 0; i < p.length; i++) {
          p[i](r, n, !0, t.pageX, t.pageY);
        }
      } else {
        w = !1;for (var i = 0; i < p.length; i++) {
          p[i](r, n, !1, t.pageX, t.pageY);
        }
      }
    }t.preventDefault();
  }function i(t) {
    t = t || event;for (var e = 0; e < g.length; e++) {
      g[e](t.deltaX, t.deltaY);
    }
  }function a(t) {
    l(), u(), p.push(t);
  }function o(t) {
    l(), u(), g.push(t);
  }function s(t) {
    l(), u(), y.push(t);
  }function u() {
    b.addEventListener("mousedown", e), b.addEventListener("touchstart", e), b.addEventListener("mouseup", r), b.addEventListener("touchend", r), b.addEventListener("touchcancel", r), b.addEventListener("mousemove", n), b.addEventListener("touchmove", n), b.addEventListener("wheel", i);
  }function l() {
    b.removeEventListener("mousedown", e), b.removeEventListener("touchstart", e), b.removeEventListener("mouseup", r), b.removeEventListener("touchend", r), b.removeEventListener("touchcancel", r), b.removeEventListener("mousemove", n), b.removeEventListener("touchmove", n), b.removeEventListener("wheel", i);
  }function f(t) {
    l(), b = t, u();
  }function h() {
    p = [], g = [], y = [], l();
  }function c() {}var d = { x: 0, y: 0 },
      p = [],
      g = [],
      y = [],
      m = {},
      v = {},
      x = 0,
      w = !1,
      b = document;return c.setOnTouch = a, c.setOnWheel = o, c.setOnZoom = s, c.setMainElement = f, t.onDestroy(h), c;
}), define("engine", ["threejs", "loader", "loop", "camera"], function (t, e, r, n) {
  function i(i) {
    function a() {
      if (h) {
        var t = s.domElement.parentElement.offsetWidth,
            e = s.domElement.parentElement.offsetHeight;l === t && f === e || (l = t, f = e, s.setSize(t, e), n.checkWindowSize(t, e)), h = !1;
      }
    }var o = this;i = i || {};var s = this.renderer = new t.WebGLRenderer({ canvas: i.canvas });this.renderer.sortObjects = !1, this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.setClearColor("white", 1), window.addEventListener("resize", function (t) {
      h = !0;
    });var u = this.scene = new t.Scene(),
        l = 0,
        f = 0,
        h = !0;this.renderer.domElement.style.display = "none", e.setOnLoad(function () {
      s.domElement.style.display = "", r.addLoop(function () {
        a(), s.render(u, n.getCamera());
      }), o.ready = !0;
    });
  }return i.prototype.renderer = null, i.prototype.scene = null, i.prototype.ready = !1, i;
}), define("dobuki", ["utils", "loop", "gifHandler", "camera", "objectpool", "spriteobject", "packer", "spritesheet", "spriterenderer", "collection", "mouse", "loader", "engine"], function (t, e, r, n, i, a, o, s, u, l, f, h, c) {
  return { Utils: t, Loop: e, GifHandler: r, Camera: n, ObjectPool: i, SpriteObject: a, SpriteSheet: s, SpriteRenderer: u, Collection: l, Mouse: f, Loader: h, Engine: c };
}), requirejs.config({ paths: { threejs: "https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min", dobuki: "dobuki", jsgif: "jsgif/gif" }, urlArgs: location.search.match(/\bdebug\b|\bdisable_cache\b/g) ? "time=" + Date.now() : "" }), require(["dobuki"], function (t) {}), define("main", function () {});
//# sourceMappingURL=dok.min.js.map